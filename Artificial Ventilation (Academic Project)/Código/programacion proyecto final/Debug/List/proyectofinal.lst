
AVRASM ver. 2.1.30  G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm Thu Jun 04 21:01:51 2020

G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1088): warning: Register r4 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1089): warning: Register r5 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1090): warning: Register r6 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1091): warning: Register r7 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1092): warning: Register r8 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1093): warning: Register r9 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1094): warning: Register r10 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1095): warning: Register r11 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1096): warning: Register r12 already defined by the .DEF directive
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1097): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : long, width
                 ;(s)scanf features      : long, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _Presion=R4
                 	.DEF _Presion_msb=R5
                 	.DEF _vel=R6
                 	.DEF _vel_msb=R7
                 	.DEF _clickencoder=R8
                 	.DEF _clickencoder_msb=R9
                 	.DEF _count1=R10
                 	.DEF _count1_msb=R11
                 	.DEF _count2=R12
                 	.DEF _count2_msb=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0171 	JMP  __RESET
000002 940c 019e 	JMP  _ext_int0_isr
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 01fb 	JMP  _timer0_ovf_isr
000018 940c 0000 	JMP  0x00
00001a 940c 01aa 	JMP  _usart_rx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _font5x7:
00002a 0705
00002b 6020
00002c 0000
00002d 0000      	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
00002e 0000
00002f 5f00
000030 0000
000031 0700      	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
000032 0700
000033 1400
000034 147f
000035 147f      	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
000036 2a24
000037 2a7f
000038 2312
000039 0813      	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
00003a 6264
00003b 4936
00003c 2255
00003d 0050      	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
00003e 0305
00003f 0000
000040 1c00
000041 4122      	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
000042 0000
000043 2241
000044 001c
000045 2a08      	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
000046 2a1c
000047 0808
000048 3e08
000049 0808      	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
00004a 5000
00004b 0030
00004c 0800
00004d 0808      	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
00004e 0808
00004f 3000
000050 0030
000051 2000      	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
000052 0810
000053 0204
000054 513e
000055 4549      	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
000056 003e
000057 7f42
000058 0040
000059 6142      	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
00005a 4951
00005b 2146
00005c 4541
00005d 314b      	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
00005e 1418
00005f 7f12
000060 2710
000061 4545      	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
000062 3945
000063 4a3c
000064 4949
000065 0130      	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
000066 0971
000067 0305
000068 4936
000069 4949      	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
00006a 0636
00006b 4949
00006c 1e29
00006d 3600      	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
00006e 0036
00006f 0000
000070 3656
000071 0000      	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
000072 0800
000073 2214
000074 1441
000075 1414      	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
000076 1414
000077 2241
000078 0814
000079 0200      	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
00007a 5101
00007b 0609
00007c 4932
00007d 4179      	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
00007e 7e3e
00007f 1111
000080 7e11
000081 497f      	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
000082 4949
000083 3e36
000084 4141
000085 2241      	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
000086 417f
000087 2241
000088 7f1c
000089 4949      	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
00008a 4149
00008b 097f
00008c 0109
00008d 3e01      	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
00008e 4141
00008f 3251
000090 087f
000091 0808      	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
000092 007f
000093 7f41
000094 0041
000095 4020      	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
000096 3f41
000097 7f01
000098 1408
000099 4122      	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
00009a 407f
00009b 4040
00009c 7f40
00009d 0402      	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
00009e 7f02
00009f 047f
0000a0 1008
0000a1 3e7f      	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
0000a2 4141
0000a3 3e41
0000a4 097f
0000a5 0909      	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
0000a6 3e06
0000a7 5141
0000a8 5e21
0000a9 097f      	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
0000aa 2919
0000ab 4646
0000ac 4949
0000ad 3149      	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
0000ae 0101
0000af 017f
0000b0 3f01
0000b1 4040      	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
0000b2 3f40
0000b3 201f
0000b4 2040
0000b5 7f1f      	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
0000b6 1820
0000b7 7f20
0000b8 1463
0000b9 1408      	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
0000ba 0363
0000bb 7804
0000bc 0304
0000bd 5161      	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
0000be 4549
0000bf 0043
0000c0 7f00
0000c1 4141      	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
0000c2 0402
0000c3 1008
0000c4 4120
0000c5 7f41      	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
0000c6 0000
0000c7 0204
0000c8 0201
0000c9 4004      	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
0000ca 4040
0000cb 4040
0000cc 0100
0000cd 0402      	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
0000ce 2000
0000cf 5454
0000d0 7854
0000d1 487f      	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
0000d2 4444
0000d3 3838
0000d4 4444
0000d5 2044      	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
0000d6 4438
0000d7 4844
0000d8 387f
0000d9 5454      	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
0000da 1854
0000db 7e08
0000dc 0109
0000dd 0802      	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
0000de 5414
0000df 3c54
0000e0 087f
0000e1 0404      	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
0000e2 0078
0000e3 7d44
0000e4 0040
0000e5 4020      	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
0000e6 3d44
0000e7 0000
0000e8 107f
0000e9 4428      	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
0000ea 4100
0000eb 407f
0000ec 7c00
0000ed 1804      	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
0000ee 7804
0000ef 087c
0000f0 0404
0000f1 3878      	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
0000f2 4444
0000f3 3844
0000f4 147c
0000f5 1414      	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
0000f6 0808
0000f7 1414
0000f8 7c18
0000f9 087c      	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
0000fa 0404
0000fb 4808
0000fc 5454
0000fd 2054      	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
0000fe 3f04
0000ff 4044
000100 3c20
000101 4040      	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
000102 7c20
000103 201c
000104 2040
000105 3c1c      	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
000106 3040
000107 3c40
000108 2844
000109 2810      	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
00010a 0c44
00010b 5050
00010c 3c50
00010d 6444      	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
00010e 4c54
00010f 0044
000110 3608
000111 0041      	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
000112 0000
000113 007f
000114 0000
000115 3641      	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
000116 0008
000117 0102
000118 0402
000119 7f02      	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
00011a 4141
00011b 7f41      	.DB  0x41,0x41,0x41,0x7F
                 __glcd_mask:
00011c 0100
00011d 0703
00011e 1f0f
00011f 7f3f      	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1192): warning: .cseg .db misalignment - padding zero byte
000120 00ff      	.DB  0xFF
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
000121 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000122 0000
000123 0000      	.DB  0x0,0x0,0x0,0x0
000124 0000
000125 0000      	.DB  0x0,0x0,0x0,0x0
000126 0000      	.DB  0x0,0x0
                 
                 _0x0:
000127 6341
000128 6974
000129 6f76
00012a 4500      	.DB  0x41,0x63,0x74,0x69,0x76,0x6F,0x0,0x45
00012b 7073
00012c 7265
00012d 0061
00012e 4f28      	.DB  0x73,0x70,0x65,0x72,0x61,0x0,0x28,0x4F
00012f 4646
000130 0029
000131 4928
000132 736e      	.DB  0x46,0x46,0x29,0x0,0x28,0x49,0x6E,0x73
000133 0029
000134 4528
000135 7073
000136 0029      	.DB  0x29,0x0,0x28,0x45,0x73,0x70,0x29,0x0
000137 5028
000138 6565
000139 2970
00013a 5000      	.DB  0x28,0x50,0x65,0x65,0x70,0x29,0x0,0x50
00013b 6572
00013c 6973
00013d 6e6f
00013e 203a      	.DB  0x72,0x65,0x73,0x69,0x6F,0x6E,0x3A,0x20
00013f 6425
000140 5600
000141 6c65
000142 203a      	.DB  0x25,0x64,0x0,0x56,0x65,0x6C,0x3A,0x20
000143 6425
000144 5400
000145 203a
000146 6425      	.DB  0x25,0x64,0x0,0x54,0x3A,0x20,0x25,0x64
000147 4500
000148 7473
000149 6461
00014a 3a6f      	.DB  0x0,0x45,0x73,0x74,0x61,0x64,0x6F,0x3A
00014b 6500
00014c 206e
00014d 7365
00014e 6570      	.DB  0x0,0x65,0x6E,0x20,0x65,0x73,0x70,0x65
00014f 6172
000150 2c00
000151 4500
000152 3a74      	.DB  0x72,0x61,0x0,0x2C,0x0,0x45,0x74,0x3A
000153 2520
000154 2064
000155 6556
000156 3a6c      	.DB  0x20,0x25,0x64,0x20,0x56,0x65,0x6C,0x3A
000157 2520
000158 2064
000159 3a50
00015a 2520      	.DB  0x20,0x25,0x64,0x20,0x50,0x3A,0x20,0x25
00015b 2064
00015c 200a
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1218): warning: .cseg .db misalignment - padding zero byte
00015d 0000      	.DB  0x64,0x20,0xA,0x20,0x0
                 _0x2080060:
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1220): warning: .cseg .db misalignment - padding zero byte
00015e 0001      	.DB  0x1
                 _0x2080000:
00015f 4e2d
000160 4e41
000161 4900
000162 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
G:\Mi unidad\Micros II Codevision\Respirador Artif\PROYECTO MICROS 2\Código\VR\programacion proyecto final\Debug\List\proyectofinal.asm(1223): warning: .cseg .db misalignment - padding zero byte
000163 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000164 0001      	.DW  0x01
000165 0002      	.DW  0x02
000166 0242      	.DW  __REG_BIT_VARS*2
                 
000167 000a      	.DW  0x0A
000168 0004      	.DW  0x04
000169 0244      	.DW  __REG_VARS*2
                 
00016a 0008      	.DW  0x08
00016b 0260      	.DW  _0x15
00016c 028f      	.DW  _0x0*2+65
                 
00016d 0001      	.DW  0x01
00016e 049e      	.DW  __seed_G104
00016f 02bc      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000170 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000171 94f8      	CLI
000172 27ee      	CLR  R30
000173 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000174 e0f1      	LDI  R31,1
000175 bffb      	OUT  GICR,R31
000176 bfeb      	OUT  GICR,R30
000177 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000178 e08d      	LDI  R24,(14-2)+1
000179 e0a2      	LDI  R26,2
00017a 27bb      	CLR  R27
                 __CLEAR_REG:
00017b 93ed      	ST   X+,R30
00017c 958a      	DEC  R24
00017d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00017e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00017f e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000180 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000181 93ed      	ST   X+,R30
000182 9701      	SBIW R24,1
000183 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000184 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000185 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000186 9185      	LPM  R24,Z+
000187 9195      	LPM  R25,Z+
000188 9700      	SBIW R24,0
000189 f061      	BREQ __GLOBAL_INI_END
00018a 91a5      	LPM  R26,Z+
00018b 91b5      	LPM  R27,Z+
00018c 9005      	LPM  R0,Z+
00018d 9015      	LPM  R1,Z+
00018e 01bf      	MOVW R22,R30
00018f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000190 9005      	LPM  R0,Z+
000191 920d      	ST   X+,R0
000192 9701      	SBIW R24,1
000193 f7e1      	BRNE __GLOBAL_INI_LOOP
000194 01fb      	MOVW R30,R22
000195 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000196 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000197 bfed      	OUT  SPL,R30
000198 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000199 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00019a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00019b e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00019c 940c 03e5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <glcd.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <font5x7.h>
                 ;
                 ;
                 ;//*******************************************************************************************************
                 ;//************************************VARIABLES GLOBALES*************************************************
                 ;//*******************************************************************************************************
                 ;
                 ;unsigned int Presion=0.0, vel=0.0;
                 ;unsigned int clickencoder=0, count1=0, count2=0, count3=0;
                 ;int estado=0, rpm_max=0, pres_max_glob=0, tiempo_ins_glob=0, tiempo_espera=0, presion_PEEP=0, presion_ins=0, presion_esp ...
                 ;
                 ;
                 ;
                 ;//*******************************************************************************************************
                 ;//*******************************INTERRUPICON EXTERNA PARA LECTURA DE ENCODER****************************
                 ;//*******************************************************************************************************
                 ;interrupt [EXT_INT0] void ext_int0_isr(void)
                 ; 0000 0018 {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
00019e 93ea      	ST   -Y,R30
00019f 93fa      	ST   -Y,R31
0001a0 b7ef      	IN   R30,SREG
0001a1 93ea      	ST   -Y,R30
                 ; 0000 0019 clickencoder++;
0001a2 01f4      	MOVW R30,R8
0001a3 9631      	ADIW R30,1
0001a4 014f      	MOVW R8,R30
                 ; 0000 001A // Place your code here
                 ; 0000 001B 
                 ; 0000 001C }
0001a5 91e9      	LD   R30,Y+
0001a6 bfef      	OUT  SREG,R30
0001a7 91f9      	LD   R31,Y+
0001a8 91e9      	LD   R30,Y+
0001a9 9518      	RETI
                 ; .FEND
                 ;
                 ;//*******************************************************************************************************
                 ;//****************************************USART**********************************************************
                 ;//*******************************************************************************************************
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE (1<<RXC)
                 ;#define FRAMING_ERROR (1<<FE)
                 ;#define PARITY_ERROR (1<<UPE)
                 ;#define DATA_OVERRUN (1<<DOR)
                 ;
                 ;// USART Receiver buffer
                 ;#define RX_BUFFER_SIZE 8
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;
                 ;#if RX_BUFFER_SIZE <= 256
                 ;unsigned char rx_wr_index=0,rx_rd_index=0;
                 ;#else
                 ;unsigned int rx_wr_index=0,rx_rd_index=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE < 256
                 ;unsigned char rx_counter=0;
                 ;#else
                 ;unsigned int rx_counter=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART Receiver buffer overflow
                 ;bit rx_buffer_overflow;
                 ;
                 ;// USART Receiver interrupt service routine
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 003C {
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
0001aa 93aa      	ST   -Y,R26
0001ab 93ea      	ST   -Y,R30
0001ac 93fa      	ST   -Y,R31
0001ad b7ef      	IN   R30,SREG
0001ae 93ea      	ST   -Y,R30
                 ; 0000 003D char status,data;
                 ; 0000 003E status=UCSRA;
0001af 931a      	ST   -Y,R17
0001b0 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0001b1 b11b      	IN   R17,11
                 ; 0000 003F data=UDR;
0001b2 b10c      	IN   R16,12
                 ; 0000 0040 //----------------------------------------------------------------------------------------------------
                 ; 0000 0041 
                 ; 0000 0042 //aqui va el codigo
                 ; 0000 0043 
                 ; 0000 0044 //---------------------------------------------------------------------------------------------------
                 ; 0000 0045 
                 ; 0000 0046 if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0001b3 2fe1      	MOV  R30,R17
0001b4 71ec      	ANDI R30,LOW(0x1C)
0001b5 f4e9      	BRNE _0x3
                 ; 0000 0047    {
                 ; 0000 0048    rx_buffer[rx_wr_index++]=data;
0001b6 91e0 029f 	LDS  R30,_rx_wr_index
0001b8 5fef      	SUBI R30,-LOW(1)
0001b9 93e0 029f 	STS  _rx_wr_index,R30
0001bb 50e1      	SUBI R30,LOW(1)
0001bc e0f0      	LDI  R31,0
0001bd 56e9      	SUBI R30,LOW(-_rx_buffer)
0001be 4ffd      	SBCI R31,HIGH(-_rx_buffer)
0001bf 8300      	ST   Z,R16
                 ; 0000 0049 #if RX_BUFFER_SIZE == 256
                 ; 0000 004A    // special case for receiver buffer size=256
                 ; 0000 004B    if (++rx_counter == 0) rx_buffer_overflow=1;
                 ; 0000 004C #else
                 ; 0000 004D    if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
0001c0 91a0 029f 	LDS  R26,_rx_wr_index
0001c2 30a8      	CPI  R26,LOW(0x8)
0001c3 f419      	BRNE _0x4
0001c4 e0e0      	LDI  R30,LOW(0)
0001c5 93e0 029f 	STS  _rx_wr_index,R30
                 ; 0000 004E    if (++rx_counter == RX_BUFFER_SIZE)
                 _0x4:
0001c7 91a0 02a1 	LDS  R26,_rx_counter
0001c9 5faf      	SUBI R26,-LOW(1)
0001ca 93a0 02a1 	STS  _rx_counter,R26
0001cc 30a8      	CPI  R26,LOW(0x8)
0001cd f429      	BRNE _0x5
                 ; 0000 004F       {
                 ; 0000 0050       rx_counter=0;
0001ce e0e0      	LDI  R30,LOW(0)
0001cf 93e0 02a1 	STS  _rx_counter,R30
                 ; 0000 0051       rx_buffer_overflow=1;
0001d1 9468      	SET
0001d2 f820      	BLD  R2,0
                 ; 0000 0052       }
                 ; 0000 0053 #endif
                 ; 0000 0054    }
                 _0x5:
                 ; 0000 0055 }
                 _0x3:
0001d3 9109      	LD   R16,Y+
0001d4 9119      	LD   R17,Y+
0001d5 91e9      	LD   R30,Y+
0001d6 bfef      	OUT  SREG,R30
0001d7 91f9      	LD   R31,Y+
0001d8 91e9      	LD   R30,Y+
0001d9 91a9      	LD   R26,Y+
0001da 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 005C {
                 _getchar:
                 ; .FSTART _getchar
                 ; 0000 005D char data;
                 ; 0000 005E while (rx_counter==0);
0001db 931a      	ST   -Y,R17
                 ;	data -> R17
                 _0x6:
0001dc 91e0 02a1 	LDS  R30,_rx_counter
0001de 30e0      	CPI  R30,0
0001df f3e1      	BREQ _0x6
                 ; 0000 005F data=rx_buffer[rx_rd_index++];
0001e0 91e0 02a0 	LDS  R30,_rx_rd_index
0001e2 5fef      	SUBI R30,-LOW(1)
0001e3 93e0 02a0 	STS  _rx_rd_index,R30
0001e5 50e1      	SUBI R30,LOW(1)
0001e6 e0f0      	LDI  R31,0
0001e7 56e9      	SUBI R30,LOW(-_rx_buffer)
0001e8 4ffd      	SBCI R31,HIGH(-_rx_buffer)
0001e9 8110      	LD   R17,Z
                 ; 0000 0060 #if RX_BUFFER_SIZE != 256
                 ; 0000 0061 if (rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
0001ea 91a0 02a0 	LDS  R26,_rx_rd_index
0001ec 30a8      	CPI  R26,LOW(0x8)
0001ed f419      	BRNE _0x9
0001ee e0e0      	LDI  R30,LOW(0)
0001ef 93e0 02a0 	STS  _rx_rd_index,R30
                 ; 0000 0062 #endif
                 ; 0000 0063 #asm("cli")
                 _0x9:
0001f1 94f8      	cli
                 ; 0000 0064 --rx_counter;
0001f2 91e0 02a1 	LDS  R30,_rx_counter
0001f4 50e1      	SUBI R30,LOW(1)
0001f5 93e0 02a1 	STS  _rx_counter,R30
                 ; 0000 0065 #asm("sei")
0001f7 9478      	sei
                 ; 0000 0066 return data;
0001f8 2fe1      	MOV  R30,R17
0001f9 9119      	LD   R17,Y+
0001fa 9508      	RET
                 ; 0000 0067 }
                 ; .FEND
                 ;#pragma used-
                 ;#endif
                 ;
                 ;// Standard Input/Output functions
                 ;
                 ;
                 ;//*******************************************************************************************************
                 ;//********************************INTERRUPCIÓN POR OVEWRFLOW DE TIMER 0, CRONOMETROS*********************
                 ;//*******************************************************************************************************
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0072 {
                 _timer0_ovf_isr:
                 ; .FSTART _timer0_ovf_isr
0001fb 920a      	ST   -Y,R0
0001fc 921a      	ST   -Y,R1
0001fd 93aa      	ST   -Y,R26
0001fe 93ba      	ST   -Y,R27
0001ff 93ea      	ST   -Y,R30
000200 93fa      	ST   -Y,R31
000201 b7ef      	IN   R30,SREG
000202 93ea      	ST   -Y,R30
                 ; 0000 0073 // Reinitialize Timer 0 value
                 ; 0000 0074 TCNT0=0xB2;
000203 ebe2      	LDI  R30,LOW(178)
000204 bfe2      	OUT  0x32,R30
                 ; 0000 0075  count1++;
000205 01f5      	MOVW R30,R10
000206 9631      	ADIW R30,1
000207 015f      	MOVW R10,R30
                 ; 0000 0076  count2++;
000208 01f6      	MOVW R30,R12
000209 9631      	ADIW R30,1
00020a 016f      	MOVW R12,R30
                 ; 0000 0077 // Place your code here
                 ; 0000 0078 if(count1 == 50)
00020b e3e2      	LDI  R30,LOW(50)
00020c e0f0      	LDI  R31,HIGH(50)
00020d 15ea      	CP   R30,R10
00020e 05fb      	CPC  R31,R11
00020f f451      	BRNE _0xA
                 ; 0000 0079 {
                 ; 0000 007A  vel = clickencoder*5;
000210 01f4      	MOVW R30,R8
000211 e0a5      	LDI  R26,LOW(5)
000212 e0b0      	LDI  R27,HIGH(5)
000213 940e 0ecc 	CALL __MULW12U
000215 013f      	MOVW R6,R30
                 ; 0000 007B  clickencoder=0;
000216 2488      	CLR  R8
000217 2499      	CLR  R9
                 ; 0000 007C  count1=0;
000218 24aa      	CLR  R10
000219 24bb      	CLR  R11
                 ; 0000 007D }
                 ; 0000 007E if(count2 == 10){ count3++; count2=0;}
                 _0xA:
00021a e0ea      	LDI  R30,LOW(10)
00021b e0f0      	LDI  R31,HIGH(10)
00021c 15ec      	CP   R30,R12
00021d 05fd      	CPC  R31,R13
00021e f431      	BRNE _0xB
00021f e8a5      	LDI  R26,LOW(_count3)
000220 e0b2      	LDI  R27,HIGH(_count3)
000221 940e 0c5e 	CALL SUBOPT_0x0
000223 24cc      	CLR  R12
000224 24dd      	CLR  R13
                 ; 0000 007F 
                 ; 0000 0080 }
                 _0xB:
000225 91e9      	LD   R30,Y+
000226 bfef      	OUT  SREG,R30
000227 91f9      	LD   R31,Y+
000228 91e9      	LD   R30,Y+
000229 91b9      	LD   R27,Y+
00022a 91a9      	LD   R26,Y+
00022b 9019      	LD   R1,Y+
00022c 9009      	LD   R0,Y+
00022d 9518      	RETI
                 ; .FEND
                 ;
                 ;// Voltage Reference: AVCC pin
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0087 {
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0088 ADMUX=adc_input | ADC_VREF_TYPE;
00022e 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
00022f 81e8      	LD   R30,Y
000230 64e0      	ORI  R30,0x40
000231 b9e7      	OUT  0x7,R30
                 ; 0000 0089 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 008A delay_us(10);
                +
000232 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000233 958a     +DEC R24
000234 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 008B // Start the AD conversion
                 ; 0000 008C ADCSRA|=(1<<ADSC);
000235 9a36      	SBI  0x6,6
                 ; 0000 008D // Wait for the AD conversion to complete
                 ; 0000 008E while ((ADCSRA & (1<<ADIF))==0);
                 _0xC:
000236 9b34      	SBIS 0x6,4
000237 cffe      	RJMP _0xC
                 ; 0000 008F ADCSRA|=(1<<ADIF);
000238 9a34      	SBI  0x6,4
                 ; 0000 0090 return ADCW;
000239 b1e4      	IN   R30,0x4
00023a b1f5      	IN   R31,0x4+1
00023b c005      	RJMP _0x212000E
                 ; 0000 0091 }
                 ; .FEND
                 ;//********************************************************************************************************************** ...
                 ;//************************************FUNCIONES DE ENTRADA/SALIDA******************************************************* ...
                 ;//********************************************************************************************************************** ...
                 ;void Speed_Control (unsigned char PWM)   //***********CONTROL DE VELOCIDAD DE MOTOR
                 ; 0000 0096 {
                 _Speed_Control:
                 ; .FSTART _Speed_Control
                 ; 0000 0097 OCR1A = PWM;
00023c 93aa      	ST   -Y,R26
                 ;	PWM -> Y+0
00023d 81e8      	LD   R30,Y
00023e e0f0      	LDI  R31,0
00023f bdfb      	OUT  0x2A+1,R31
000240 bdea      	OUT  0x2A,R30
                 ; 0000 0098 }
                 _0x212000E:
000241 9621      	ADIW R28,1
000242 9508      	RET
                 ; .FEND
                 ;
                 ;//********************************************************************************************************************** ...
                 ;void Display_Data (unsigned int RPM, unsigned int PRES, int STATE,int etapa)                                  //******** ...
                 ; 0000 009C {                                                                                                             //******** ...
                 _Display_Data:
                 ; .FSTART _Display_Data
                 ; 0000 009D char texto1[12], texto2[12], texto3[12], texto4[12], texto5[12];                                              //******** ...
                 ; 0000 009E                                                                                                               //******** ...
                 ; 0000 009F if(STATE == 1){        sprintf(texto1,"Activo"); }   //****************                                       //******** ...
000243 93ba      	ST   -Y,R27
000244 93aa      	ST   -Y,R26
000245 97ec      	SBIW R28,60
                 ;	RPM -> Y+66
                 ;	PRES -> Y+64
                 ;	STATE -> Y+62
                 ;	etapa -> Y+60
                 ;	texto1 -> Y+48
                 ;	texto2 -> Y+36
                 ;	texto3 -> Y+24
                 ;	texto4 -> Y+12
                 ;	texto5 -> Y+0
000246 adae      	LDD  R26,Y+62
000247 adbf      	LDD  R27,Y+62+1
000248 9711      	SBIW R26,1
000249 f439      	BRNE _0xF
00024a 01fe      	MOVW R30,R28
00024b 96f0      	ADIW R30,48
00024c 93fa      	ST   -Y,R31
00024d 93ea      	ST   -Y,R30
                +
00024e e4ee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00024f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000250 c006      	RJMP _0x3D
                 ; 0000 00A0 else{                  sprintf(texto1,"Espera");}    //****************                                       //******** ...
                 _0xF:
000251 01fe      	MOVW R30,R28
000252 96f0      	ADIW R30,48
000253 93fa      	ST   -Y,R31
000254 93ea      	ST   -Y,R30
                +
000255 e5e5     +LDI R30 , LOW ( 2 * _0x0 + ( 7 ) )
000256 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW1FN _0x0,7
                 _0x3D:
000257 93fa      	ST   -Y,R31
000258 93ea      	ST   -Y,R30
000259 940e 0c64 	CALL SUBOPT_0x1
                 ; 0000 00A1 if(etapa == 0){        sprintf(texto2,"(OFF)"); }    //****************Determinación de mensaje de            //******** ...
00025b adec      	LDD  R30,Y+60
00025c adfd      	LDD  R31,Y+60+1
00025d 9730      	SBIW R30,0
00025e f431      	BRNE _0x11
00025f 940e 0c69 	CALL SUBOPT_0x2
                +
000261 e5ec     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
000262 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
000263 940e 0c6e 	CALL SUBOPT_0x3
                 ; 0000 00A2 if(etapa == 1){        sprintf(texto2,"(Ins)"); }    //****************acuerdo a estado y etapa               //******** ...
                 _0x11:
000265 adac      	LDD  R26,Y+60
000266 adbd      	LDD  R27,Y+60+1
000267 9711      	SBIW R26,1
000268 f431      	BRNE _0x12
000269 940e 0c69 	CALL SUBOPT_0x2
                +
00026b e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 20 ) )
00026c e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW1FN _0x0,20
00026d 940e 0c6e 	CALL SUBOPT_0x3
                 ; 0000 00A3 if(etapa == 2){        sprintf(texto2,"(Esp)"); }    //****************                                       //******** ...
                 _0x12:
00026f adac      	LDD  R26,Y+60
000270 adbd      	LDD  R27,Y+60+1
000271 9712      	SBIW R26,2
000272 f431      	BRNE _0x13
000273 940e 0c69 	CALL SUBOPT_0x2
                +
000275 e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 26 ) )
000276 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 26 ) )
                 	__POINTW1FN _0x0,26
000277 940e 0c6e 	CALL SUBOPT_0x3
                 ; 0000 00A4 if(etapa == 3){        sprintf(texto2,"(Peep)"); }   //****************                                       //******** ...
                 _0x13:
000279 adac      	LDD  R26,Y+60
00027a adbd      	LDD  R27,Y+60+1
00027b 9713      	SBIW R26,3
00027c f431      	BRNE _0x14
00027d 940e 0c69 	CALL SUBOPT_0x2
                +
00027f e6ee     +LDI R30 , LOW ( 2 * _0x0 + ( 32 ) )
000280 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 32 ) )
                 	__POINTW1FN _0x0,32
000281 940e 0c6e 	CALL SUBOPT_0x3
                 ; 0000 00A5                                                                                                               //******** ...
                 ; 0000 00A6 sprintf(texto3,"Presion: %d",(unsigned int)PRES);    //****************                                       //******** ...
                 _0x14:
000283 01fe      	MOVW R30,R28
000284 9678      	ADIW R30,24
000285 93fa      	ST   -Y,R31
000286 93ea      	ST   -Y,R30
                +
000287 e7e5     +LDI R30 , LOW ( 2 * _0x0 + ( 39 ) )
000288 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 39 ) )
                 	__POINTW1FN _0x0,39
000289 93fa      	ST   -Y,R31
00028a 93ea      	ST   -Y,R30
                +
00028b 01fe     +MOVW R30 , R28
00028c 5bec     +SUBI R30 , LOW ( - 68 )
00028d 4fff     +SBCI R31 , HIGH ( - 68 )
00028e 9001     +LD R0 , Z +
00028f 81f0     +LD R31 , Z
000290 2de0     +MOV R30 , R0
                 	__GETW1SX 68
000291 940e 0c71 	CALL SUBOPT_0x4
                 ; 0000 00A7 sprintf(texto4,"Vel: %d",RPM);                       //**************** Creación de strings                   //******** ...
000293 01fe      	MOVW R30,R28
000294 963c      	ADIW R30,12
000295 93fa      	ST   -Y,R31
000296 93ea      	ST   -Y,R30
                +
000297 e8e1     +LDI R30 , LOW ( 2 * _0x0 + ( 51 ) )
000298 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 51 ) )
                 	__POINTW1FN _0x0,51
000299 93fa      	ST   -Y,R31
00029a 93ea      	ST   -Y,R30
                +
00029b 01fe     +MOVW R30 , R28
00029c 5bea     +SUBI R30 , LOW ( - 70 )
00029d 4fff     +SBCI R31 , HIGH ( - 70 )
00029e 9001     +LD R0 , Z +
00029f 81f0     +LD R31 , Z
0002a0 2de0     +MOV R30 , R0
                 	__GETW1SX 70
0002a1 940e 0c71 	CALL SUBOPT_0x4
                 ; 0000 00A8 sprintf(texto5,"T: %d",(int)tiempo_espera);        //****************                                       //********** ...
0002a3 01fe      	MOVW R30,R28
0002a4 93fa      	ST   -Y,R31
0002a5 93ea      	ST   -Y,R30
                +
0002a6 e8e9     +LDI R30 , LOW ( 2 * _0x0 + ( 59 ) )
0002a7 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 59 ) )
                 	__POINTW1FN _0x0,59
0002a8 93fa      	ST   -Y,R31
0002a9 93ea      	ST   -Y,R30
0002aa 91e0 028f 	LDS  R30,_tiempo_espera
0002ac 91f0 0290 	LDS  R31,_tiempo_espera+1
0002ae 940e 0ec7 	CALL __CWD1
0002b0 940e 0f07 	CALL __PUTPARD1
0002b2 e084      	LDI  R24,4
0002b3 940e 0abc 	CALL _sprintf
0002b5 9628      	ADIW R28,8
                 ; 0000 00A9 glcd_clear();                                                                                                            ...
0002b6 940e 0555 	CALL _glcd_clear
                 ; 0000 00AA glcd_moveto(8,0);   glcd_outtext("Estado:");   //****************                                             //******** ...
0002b8 e0e8      	LDI  R30,LOW(8)
0002b9 93ea      	ST   -Y,R30
0002ba e0a0      	LDI  R26,LOW(0)
0002bb 940e 08b4 	CALL _glcd_moveto
                +
0002bd e6a0     +LDI R26 , LOW ( _0x15 + ( 0 ) )
0002be e0b2     +LDI R27 , HIGH ( _0x15 + ( 0 ) )
                 	__POINTW2MN _0x15,0
0002bf 940e 0c7a 	CALL SUBOPT_0x5
                 ; 0000 00AB glcd_moveto(8,10);  glcd_outtext(texto1);      //****************                                             //******** ...
0002c1 e0aa      	LDI  R26,LOW(10)
0002c2 940e 08b4 	CALL _glcd_moveto
0002c4 01de      	MOVW R26,R28
0002c5 96d0      	ADIW R26,48
0002c6 940e 08a3 	CALL _glcd_outtext
                 ; 0000 00AC glcd_moveto(45,10); glcd_outtext(texto2);      //****************  Coordenadas y escritura en LCD             //******** ...
0002c8 e2ed      	LDI  R30,LOW(45)
0002c9 93ea      	ST   -Y,R30
0002ca e0aa      	LDI  R26,LOW(10)
0002cb 940e 08b4 	CALL _glcd_moveto
0002cd 01de      	MOVW R26,R28
0002ce 9694      	ADIW R26,36
0002cf 940e 0c7a 	CALL SUBOPT_0x5
                 ; 0000 00AD glcd_moveto(8,20);  glcd_outtext(texto3);      //****************                                             //******** ...
0002d1 e1a4      	LDI  R26,LOW(20)
0002d2 940e 08b4 	CALL _glcd_moveto
0002d4 01de      	MOVW R26,R28
0002d5 9658      	ADIW R26,24
0002d6 940e 0c7a 	CALL SUBOPT_0x5
                 ; 0000 00AE glcd_moveto(8,30);  glcd_outtext(texto4);      //****************                                             //******** ...
0002d8 e1ae      	LDI  R26,LOW(30)
0002d9 940e 08b4 	CALL _glcd_moveto
0002db 01de      	MOVW R26,R28
0002dc 961c      	ADIW R26,12
0002dd 940e 0c7a 	CALL SUBOPT_0x5
                 ; 0000 00AF glcd_moveto(8,40);  glcd_outtext(texto5);      //****************                                             //******** ...
0002df e2a8      	LDI  R26,LOW(40)
0002e0 940e 08b4 	CALL _glcd_moveto
0002e2 01de      	MOVW R26,R28
0002e3 940e 08a3 	CALL _glcd_outtext
                 ; 0000 00B0 }                                                                                                             //******** ...
0002e5 96ef      	ADIW R28,63
0002e6 9625      	ADIW R28,5
0002e7 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x15:
000260           	.BYTE 0x8
                 ;//********************************************************************************************************************** ...
                 ;
                 ;
                 ;//******************************************************************************************
                 ;unsigned int leer_presion(void){                                          //****************
                 ; 0000 00B5 unsigned int leer_presion(void){
                 
                 	.CSEG
                 _leer_presion:
                 ; .FSTART _leer_presion
                 ; 0000 00B6 Presion=read_adc(0);                                                      //****************
0002e8 e0a0      	LDI  R26,LOW(0)
0002e9 df44      	RCALL _read_adc
0002ea 012f      	MOVW R4,R30
                 ; 0000 00B7 //Presion=(Presion*0.488*0.222)+9.3;  /*0.488*0.222*0.01%3d*/             //**************** LECTURA DE SENSOR DE PRESIÓ ...
                 ; 0000 00B8 Presion=(Presion*0.488*0.222)+9.3;
0002eb 2766      	CLR  R22
0002ec 2777      	CLR  R23
0002ed 940e 0dda 	CALL __CDF1
                +
0002ef e2a3     +LDI R26 , LOW ( 0x3EF9DB23 )
0002f0 edbb     +LDI R27 , HIGH ( 0x3EF9DB23 )
0002f1 ef89     +LDI R24 , BYTE3 ( 0x3EF9DB23 )
0002f2 e39e     +LDI R25 , BYTE4 ( 0x3EF9DB23 )
                 	__GETD2N 0x3EF9DB23
0002f3 940e 0e5d 	CALL __MULF12
                +
0002f5 efa8     +LDI R26 , LOW ( 0x3E6353F8 )
0002f6 e5b3     +LDI R27 , HIGH ( 0x3E6353F8 )
0002f7 e683     +LDI R24 , BYTE3 ( 0x3E6353F8 )
0002f8 e39e     +LDI R25 , BYTE4 ( 0x3E6353F8 )
                 	__GETD2N 0x3E6353F8
0002f9 940e 0e5d 	CALL __MULF12
                +
0002fb ecad     +LDI R26 , LOW ( 0x4114CCCD )
0002fc ecbc     +LDI R27 , HIGH ( 0x4114CCCD )
0002fd e184     +LDI R24 , BYTE3 ( 0x4114CCCD )
0002fe e491     +LDI R25 , BYTE4 ( 0x4114CCCD )
                 	__GETD2N 0x4114CCCD
0002ff 940e 0e0d 	CALL __ADDF12
000301 940e 0da1 	CALL __CFD1U
000303 012f      	MOVW R4,R30
                 ; 0000 00B9 return Presion;                                                           //****************
000304 9508      	RET
                 ; 0000 00BA }                                                                         //****************
                 ; .FEND
                 ;//******************************************************************************************
                 ;
                 ;//********************************************************************************************************************** ...
                 ;void LeerConfig (void)                                                                                                   ...
                 ; 0000 00BF {
                 _LeerConfig:
                 ; .FSTART _LeerConfig
                 ; 0000 00C0                                                                                                                       // ...
                 ; 0000 00C1 int i=1;                                                                                                                 ...
                 ; 0000 00C2 char mensajeconfig[70];                                                                                                  ...
                 ; 0000 00C3 //char mensajeconfig[70]="           01,255,080,50,20,536          ";    //*************** Mensaje de prueba             ...
                 ; 0000 00C4 char* salida[7];                                                                                                         ...
                 ; 0000 00C5 char* token;                                                                                                             ...
                 ; 0000 00C6 printf("en espera");                                                                                                     ...
000305 97ef      	SBIW R28,63
000306 9765      	SBIW R28,21
000307 940e 0f33 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	mensajeconfig -> Y+18
                 ;	salida -> Y+4
                 ;	*token -> R18,R19
                +
000309 e001     +LDI R16 , LOW ( 1 )
00030a e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                +
00030b e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 73 ) )
00030c e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 73 ) )
                 	__POINTW1FN _0x0,73
00030d 93fa      	ST   -Y,R31
00030e 93ea      	ST   -Y,R30
00030f e080      	LDI  R24,0
000310 940e 0aea 	CALL _printf
000312 9622      	ADIW R28,2
                 ; 0000 00C7 gets(mensajeconfig,70);                                                                                                  ...
000313 01fe      	MOVW R30,R28
000314 9672      	ADIW R30,18
000315 93fa      	ST   -Y,R31
000316 93ea      	ST   -Y,R30
000317 e4a6      	LDI  R26,LOW(70)
000318 e0b0      	LDI  R27,0
000319 940e 08c8 	CALL _gets
                 ; 0000 00C8 token = strtok(mensajeconfig, ",");                                      //***************                               ...
00031b 01fe      	MOVW R30,R28
00031c 9672      	ADIW R30,18
00031d 940e 0c7f 	CALL SUBOPT_0x6
                 ; 0000 00C9 salida[0]=token;                                                         //***************                               ...
                +
00031f 832c     +STD Y + 4 , R18
000320 833d     +STD Y + 4 + 1 , R19
                 	__PUTWSR 18,19,4
                 ; 0000 00CA    for(i=1;i<=6;i++){                                                    //***************                               ...
                +
000321 e001     +LDI R16 , LOW ( 1 )
000322 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 _0x17:
                +
000323 3007     +CPI R16 , LOW ( 7 )
000324 e0e0     +LDI R30 , HIGH ( 7 )
000325 071e     +CPC R17 , R30
                 	__CPWRN 16,17,7
000326 f484      	BRGE _0x18
                 ; 0000 00CB          token = strtok(NULL, ",");                                      //***************  Separación de Variables      ...
000327 e0e0      	LDI  R30,LOW(0)
000328 e0f0      	LDI  R31,HIGH(0)
000329 940e 0c7f 	CALL SUBOPT_0x6
                 ; 0000 00CC          salida[i] = token;                                              //***************                               ...
00032b 01f8      	MOVW R30,R16
00032c 01de      	MOVW R26,R28
00032d 9614      	ADIW R26,4
00032e 0fee      	LSL  R30
00032f 1fff      	ROL  R31
000330 0fea      	ADD  R30,R26
000331 1ffb      	ADC  R31,R27
000332 8320      	ST   Z,R18
000333 8331      	STD  Z+1,R19
                 ; 0000 00CD    }                                                                     //***************                               ...
                +
000334 5f0f     +SUBI R16 , LOW ( - 1 )
000335 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000336 cfec      	RJMP _0x17
                 _0x18:
                 ; 0000 00CE estado = atoi(salida[0]);                       //***************                                                        ...
000337 81ac      	LDD  R26,Y+4
000338 81bd      	LDD  R27,Y+4+1
000339 940e 0ba2 	CALL _atoi
00033b 93e0 0287 	STS  _estado,R30
00033d 93f0 0288 	STS  _estado+1,R31
                 ; 0000 00CF rpm_max = atoi(salida[1]);                      //***************                                                        ...
00033f 81ae      	LDD  R26,Y+6
000340 81bf      	LDD  R27,Y+6+1
000341 940e 0ba2 	CALL _atoi
000343 93e0 0289 	STS  _rpm_max,R30
000345 93f0 028a 	STS  _rpm_max+1,R31
                 ; 0000 00D0 pres_max_glob = atoi(salida[2]);                //***************                                                        ...
000347 85a8      	LDD  R26,Y+8
000348 85b9      	LDD  R27,Y+8+1
000349 940e 0ba2 	CALL _atoi
00034b 93e0 028b 	STS  _pres_max_glob,R30
00034d 93f0 028c 	STS  _pres_max_glob+1,R31
                 ; 0000 00D1 tiempo_ins_glob = atoi(salida[3]);              //***************  Conversiones a Entero                                 ...
00034f 85aa      	LDD  R26,Y+10
000350 85bb      	LDD  R27,Y+10+1
000351 940e 0ba2 	CALL _atoi
000353 93e0 028d 	STS  _tiempo_ins_glob,R30
000355 93f0 028e 	STS  _tiempo_ins_glob+1,R31
                 ; 0000 00D2 presion_PEEP = atoi(salida[4]);                 //***************                                                        ...
000357 85ac      	LDD  R26,Y+12
000358 85bd      	LDD  R27,Y+12+1
000359 940e 0ba2 	CALL _atoi
00035b 93e0 0291 	STS  _presion_PEEP,R30
00035d 93f0 0292 	STS  _presion_PEEP+1,R31
                 ; 0000 00D3 tiempo_espera = atoi(salida[5]);                //***************                                                        ...
00035f 85ae      	LDD  R26,Y+14
000360 85bf      	LDD  R27,Y+14+1
000361 940e 0ba2 	CALL _atoi
000363 93e0 028f 	STS  _tiempo_espera,R30
000365 93f0 0290 	STS  _tiempo_espera+1,R31
                 ; 0000 00D4 }                                                                                                                        ...
000367 940e 0f3a 	CALL __LOADLOCR4
000369 96ef      	ADIW R28,63
00036a 9669      	ADIW R28,25
00036b 9508      	RET
                 ; .FEND
                 ;//********************************************************************************************************************** ...
                 ;void Envio_Datos (int etapa){
                 ; 0000 00D6 void Envio_Datos (int etapa){
                 _Envio_Datos:
                 ; .FSTART _Envio_Datos
                 ; 0000 00D7 printf("Et: %d Vel: %d P: %d \n ",etapa,vel,Presion);
00036c 93ba      	ST   -Y,R27
00036d 93aa      	ST   -Y,R26
                 ;	etapa -> Y+0
                +
00036e eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 85 ) )
00036f e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 85 ) )
                 	__POINTW1FN _0x0,85
000370 93fa      	ST   -Y,R31
000371 93ea      	ST   -Y,R30
000372 81ea      	LDD  R30,Y+2
000373 81fb      	LDD  R31,Y+2+1
000374 940e 0ec7 	CALL __CWD1
000376 940e 0f07 	CALL __PUTPARD1
000378 01f3      	MOVW R30,R6
000379 2766      	CLR  R22
00037a 2777      	CLR  R23
00037b 940e 0f07 	CALL __PUTPARD1
00037d 01f2      	MOVW R30,R4
00037e 2766      	CLR  R22
00037f 2777      	CLR  R23
000380 940e 0f07 	CALL __PUTPARD1
000382 e08c      	LDI  R24,12
000383 940e 0aea 	CALL _printf
000385 962e      	ADIW R28,14
                 ; 0000 00D8 delay_ms(100);}
000386 e6a4      	LDI  R26,LOW(100)
000387 e0b0      	LDI  R27,0
000388 940e 0d6a 	CALL _delay_ms
00038a c133      	RJMP _0x212000D
                 ; .FEND
                 ;
                 ;
                 ;//*******************************************************************************************************
                 ;//************************************ETAPAS RESPIRATORIAS***********************************************
                 ;//*******************************************************************************************************
                 ;void Inspiracion (unsigned int tiempoins,unsigned int vel_max,unsigned int pres_max_func)
                 ; 0000 00DF {
                 _Inspiracion:
                 ; .FSTART _Inspiracion
                 ; 0000 00E0 count3=0;
00038b 940e 0c87 	CALL SUBOPT_0x7
                 ;	tiempoins -> Y+4
                 ;	vel_max -> Y+2
                 ;	pres_max_func -> Y+0
                 ; 0000 00E1 do{
                 _0x1A:
                 ; 0000 00E2 PORTC.0=1;
00038d 9aa8      	SBI  0x15,0
                 ; 0000 00E3 PORTC.1=1;
00038e 9aa9      	SBI  0x15,1
                 ; 0000 00E4 PORTC.2=0;
00038f 98aa      	CBI  0x15,2
                 ; 0000 00E5 Speed_Control(vel_max);
000390 81aa      	LDD  R26,Y+2
000391 deaa      	RCALL _Speed_Control
                 ; 0000 00E6 presion_ins=leer_presion();
000392 df55      	RCALL _leer_presion
000393 93e0 0293 	STS  _presion_ins,R30
000395 93f0 0294 	STS  _presion_ins+1,R31
                 ; 0000 00E7 Display_Data (vel, presion_ins, estado,1);
000397 927a      	ST   -Y,R7
000398 926a      	ST   -Y,R6
000399 940e 0c8f 	CALL SUBOPT_0x8
00039b e0a1      	LDI  R26,LOW(1)
00039c e0b0      	LDI  R27,0
00039d dea5      	RCALL _Display_Data
                 ; 0000 00E8 Envio_Datos(1);
00039e e0a1      	LDI  R26,LOW(1)
00039f e0b0      	LDI  R27,0
0003a0 dfcb      	RCALL _Envio_Datos
                 ; 0000 00E9 }while(count3 < tiempoins || presion_ins < pres_max_func );
0003a1 81ec      	LDD  R30,Y+4
0003a2 81fd      	LDD  R31,Y+4+1
0003a3 940e 0c98 	CALL SUBOPT_0x9
0003a5 f048      	BRLO _0x22
0003a6 81e8      	LD   R30,Y
0003a7 81f9      	LDD  R31,Y+1
0003a8 91a0 0293 	LDS  R26,_presion_ins
0003aa 91b0 0294 	LDS  R27,_presion_ins+1
0003ac 17ae      	CP   R26,R30
0003ad 07bf      	CPC  R27,R31
0003ae f408      	BRSH _0x1B
                 _0x22:
0003af cfdd      	RJMP _0x1A
                 _0x1B:
                 ; 0000 00EA Speed_Control(0);
0003b0 e0a0      	LDI  R26,LOW(0)
0003b1 de8a      	RCALL _Speed_Control
                 ; 0000 00EB }
0003b2 c195      	RJMP _0x212000C
                 ; .FEND
                 ;
                 ;void Espiracion (unsigned int PEEP)
                 ; 0000 00EE {
                 _Espiracion:
                 ; .FSTART _Espiracion
                 ; 0000 00EF Speed_Control(0);
0003b3 93ba      	ST   -Y,R27
0003b4 93aa      	ST   -Y,R26
                 ;	PEEP -> Y+0
0003b5 e0a0      	LDI  R26,LOW(0)
0003b6 de85      	RCALL _Speed_Control
                 ; 0000 00F0 do{
                 _0x25:
                 ; 0000 00F1 PORTC.0=0;
0003b7 98a8      	CBI  0x15,0
                 ; 0000 00F2 PORTC.1=0;
0003b8 98a9      	CBI  0x15,1
                 ; 0000 00F3 PORTC.2=1;
0003b9 9aaa      	SBI  0x15,2
                 ; 0000 00F4 presion_esp=leer_presion();
0003ba 940e 0c9f 	CALL SUBOPT_0xA
                 ; 0000 00F5 Display_Data (vel, presion_esp, estado,2);
0003bc 940e 0ca6 	CALL SUBOPT_0xB
0003be e0a2      	LDI  R26,LOW(2)
0003bf e0b0      	LDI  R27,0
0003c0 de82      	RCALL _Display_Data
                 ; 0000 00F6 Envio_Datos(2);
0003c1 e0a2      	LDI  R26,LOW(2)
0003c2 e0b0      	LDI  R27,0
0003c3 dfa8      	RCALL _Envio_Datos
                 ; 0000 00F7 }while (presion_esp > PEEP);
0003c4 81e8      	LD   R30,Y
0003c5 81f9      	LDD  R31,Y+1
0003c6 91a0 0295 	LDS  R26,_presion_esp
0003c8 91b0 0296 	LDS  R27,_presion_esp+1
0003ca 17ea      	CP   R30,R26
0003cb 07fb      	CPC  R31,R27
0003cc f350      	BRLO _0x25
                 ; 0000 00F8 }
0003cd c0f0      	RJMP _0x212000D
                 ; .FEND
                 ;
                 ;void Wait (unsigned int t_esp)
                 ; 0000 00FB {
                 _Wait:
                 ; .FSTART _Wait
                 ; 0000 00FC count3=0;
0003ce 940e 0c87 	CALL SUBOPT_0x7
                 ;	t_esp -> Y+0
                 ; 0000 00FD Speed_Control(0);
0003d0 e0a0      	LDI  R26,LOW(0)
0003d1 de6a      	RCALL _Speed_Control
                 ; 0000 00FE do{
                 _0x2E:
                 ; 0000 00FF presion_esp=leer_presion();
0003d2 940e 0c9f 	CALL SUBOPT_0xA
                 ; 0000 0100 PORTC.0=0;
0003d4 98a8      	CBI  0x15,0
                 ; 0000 0101 PORTC.1=0;
0003d5 98a9      	CBI  0x15,1
                 ; 0000 0102 PORTC.2=0;
0003d6 98aa      	CBI  0x15,2
                 ; 0000 0103 Display_Data (vel, presion_esp, estado,3);
0003d7 940e 0ca6 	CALL SUBOPT_0xB
0003d9 e0a3      	LDI  R26,LOW(3)
0003da e0b0      	LDI  R27,0
0003db de67      	RCALL _Display_Data
                 ; 0000 0104 Envio_Datos(3);
0003dc e0a3      	LDI  R26,LOW(3)
0003dd e0b0      	LDI  R27,0
0003de df8d      	RCALL _Envio_Datos
                 ; 0000 0105 }while (count3 < t_esp);
0003df 81e8      	LD   R30,Y
0003e0 81f9      	LDD  R31,Y+1
0003e1 940e 0c98 	CALL SUBOPT_0x9
0003e3 f370      	BRLO _0x2E
                 ; 0000 0106 }
0003e4 c0d9      	RJMP _0x212000D
                 ; .FEND
                 ;//*******************************************************************************************************
                 ;//************************************FUNCION PRINCIPAL**************************************************
                 ;//*******************************************************************************************************
                 ;void main(void)
                 ; 0000 010B {
                 _main:
                 ; .FSTART _main
                 ; 0000 010C #include <ports.h>
0003e5 9728      	SBIW R28,8
                 ;	glcd_init_data -> Y+0
0003e6 e0e0      	LDI  R30,LOW(0)
0003e7 bbea      	OUT  0x1A,R30
0003e8 bbeb      	OUT  0x1B,R30
0003e9 bbe7      	OUT  0x17,R30
0003ea eee0      	LDI  R30,LOW(224)
0003eb bbe8      	OUT  0x18,R30
0003ec e0e7      	LDI  R30,LOW(7)
0003ed bbe4      	OUT  0x14,R30
0003ee e0e0      	LDI  R30,LOW(0)
0003ef bbe5      	OUT  0x15,R30
0003f0 e2e0      	LDI  R30,LOW(32)
0003f1 bbe1      	OUT  0x11,R30
0003f2 e0e4      	LDI  R30,LOW(4)
0003f3 bbe2      	OUT  0x12,R30
0003f4 e0e5      	LDI  R30,LOW(5)
0003f5 bfe3      	OUT  0x33,R30
0003f6 ebe2      	LDI  R30,LOW(178)
0003f7 bfe2      	OUT  0x32,R30
0003f8 e0e0      	LDI  R30,LOW(0)
0003f9 bfec      	OUT  0x3C,R30
0003fa e8e1      	LDI  R30,LOW(129)
0003fb bdef      	OUT  0x2F,R30
0003fc e0e2      	LDI  R30,LOW(2)
0003fd bdee      	OUT  0x2E,R30
0003fe e0e0      	LDI  R30,LOW(0)
0003ff bded      	OUT  0x2D,R30
000400 bdec      	OUT  0x2C,R30
000401 bde7      	OUT  0x27,R30
000402 bde6      	OUT  0x26,R30
000403 bdeb      	OUT  0x2B,R30
000404 bdea      	OUT  0x2A,R30
000405 bde9      	OUT  0x29,R30
000406 bde8      	OUT  0x28,R30
000407 bde2      	OUT  0x22,R30
000408 bde5      	OUT  0x25,R30
000409 bde4      	OUT  0x24,R30
00040a bde3      	OUT  0x23,R30
00040b e0e1      	LDI  R30,LOW(1)
00040c bfe9      	OUT  0x39,R30
00040d b7eb      	IN   R30,0x3B
00040e 64e0      	ORI  R30,0x40
00040f bfeb      	OUT  0x3B,R30
000410 e0e2      	LDI  R30,LOW(2)
000411 bfe5      	OUT  0x35,R30
000412 e0e0      	LDI  R30,LOW(0)
000413 bfe4      	OUT  0x34,R30
000414 e4e0      	LDI  R30,LOW(64)
000415 bfea      	OUT  0x3A,R30
000416 e0e0      	LDI  R30,LOW(0)
000417 b9eb      	OUT  0xB,R30
000418 e9e8      	LDI  R30,LOW(152)
000419 b9ea      	OUT  0xA,R30
00041a e8e6      	LDI  R30,LOW(134)
00041b bde0      	OUT  0x20,R30
00041c e0e0      	LDI  R30,LOW(0)
00041d bde0      	OUT  0x20,R30
00041e e3e3      	LDI  R30,LOW(51)
00041f b9e9      	OUT  0x9,R30
000420 e8e0      	LDI  R30,LOW(128)
000421 b9e8      	OUT  0x8,R30
000422 e4e0      	LDI  R30,LOW(64)
000423 b9e7      	OUT  0x7,R30
000424 e8e7      	LDI  R30,LOW(135)
000425 b9e6      	OUT  0x6,R30
000426 e0e0      	LDI  R30,LOW(0)
000427 bfe0      	OUT  0x30,R30
000428 b9ed      	OUT  0xD,R30
000429 bfe6      	OUT  0x36,R30
00042a e5e4      	LDI  R30,LOW(_font5x7*2)
00042b e0f0      	LDI  R31,HIGH(_font5x7*2)
00042c 83e8      	ST   Y,R30
00042d 83f9      	STD  Y+1,R31
00042e e0e0      	LDI  R30,LOW(0)
00042f 83ea      	STD  Y+2,R30
000430 83eb      	STD  Y+2+1,R30
000431 83ec      	STD  Y+4,R30
000432 83ed      	STD  Y+4+1,R30
000433 81ee      	LDD  R30,Y+6
000434 7fec      	ANDI R30,LOW(0xFC)
000435 83ee      	STD  Y+6,R30
000436 7ee3      	ANDI R30,LOW(0xE3)
000437 60ec      	ORI  R30,LOW(0xC)
000438 83ee      	STD  Y+6,R30
000439 81ef      	LDD  R30,Y+7
00043a 78e0      	ANDI R30,LOW(0x80)
00043b 63e2      	ORI  R30,LOW(0x32)
00043c 83ef      	STD  Y+7,R30
00043d 01de      	MOVW R26,R28
00043e d08c      	RCALL _glcd_init
00043f 9478      	sei
                 ; 0000 010D 
                 ; 0000 010E 
                 ; 0000 010F while (1)
                 _0x36:
                 ; 0000 0110       {/*if(estado == 1){
                 ; 0000 0111       Inspiracion(tiempo_ins_glob,rpm_max,pres_max_glob);
                 ; 0000 0112       Wait(tiempo_espera);
                 ; 0000 0113       Espiracion(presion_PEEP);
                 ; 0000 0114       Wait(tiempo_espera);
                 ; 0000 0115       }
                 ; 0000 0116       */
                 ; 0000 0117       Display_Data (tiempo_ins_glob, presion_esp, estado,0);
000440 940e 0cad 	CALL SUBOPT_0xC
000442 91e0 0295 	LDS  R30,_presion_esp
000444 91f0 0296 	LDS  R31,_presion_esp+1
000446 940e 0c8f 	CALL SUBOPT_0x8
000448 e0a0      	LDI  R26,LOW(0)
000449 e0b0      	LDI  R27,0
00044a ddf8      	RCALL _Display_Data
                 ; 0000 0118       LeerConfig();
00044b deb9      	RCALL _LeerConfig
                 ; 0000 0119         do{
                 _0x3A:
                 ; 0000 011A       Inspiracion(tiempo_ins_glob,rpm_max,pres_max_glob);
00044c 940e 0cad 	CALL SUBOPT_0xC
00044e 91e0 0289 	LDS  R30,_rpm_max
000450 91f0 028a 	LDS  R31,_rpm_max+1
000452 93fa      	ST   -Y,R31
000453 93ea      	ST   -Y,R30
000454 91a0 028b 	LDS  R26,_pres_max_glob
000456 91b0 028c 	LDS  R27,_pres_max_glob+1
000458 df32      	RCALL _Inspiracion
                 ; 0000 011B       Wait(tiempo_espera);
000459 940e 0cb4 	CALL SUBOPT_0xD
                 ; 0000 011C       Espiracion(presion_PEEP);
00045b 91a0 0291 	LDS  R26,_presion_PEEP
00045d 91b0 0292 	LDS  R27,_presion_PEEP+1
00045f df53      	RCALL _Espiracion
                 ; 0000 011D       Wait(tiempo_espera);
000460 940e 0cb4 	CALL SUBOPT_0xD
                 ; 0000 011E        }while(estado == 1);
000462 91a0 0287 	LDS  R26,_estado
000464 91b0 0288 	LDS  R27,_estado+1
000466 9711      	SBIW R26,1
000467 f321      	BREQ _0x3A
                 ; 0000 011F 
                 ; 0000 0120 
                 ; 0000 0121 
                 ; 0000 0122 
                 ; 0000 0123       }
000468 cfd7      	RJMP _0x36
                 ; 0000 0124 }
                 _0x3C:
000469 cfff      	RJMP _0x3C
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _pcd8544_delay_G100:
                 ; .FSTART _pcd8544_delay_G100
00046a 9508      	RET
                 ; .FEND
                 _pcd8544_wrbus_G100:
                 ; .FSTART _pcd8544_wrbus_G100
00046b 93aa      	ST   -Y,R26
00046c 931a      	ST   -Y,R17
00046d 98c0      	CBI  0x18,0
00046e e018      	LDI  R17,LOW(8)
                 _0x2000004:
00046f dffa      	RCALL _pcd8544_delay_G100
000470 81e9      	LDD  R30,Y+1
000471 78e0      	ANDI R30,LOW(0x80)
000472 f011      	BREQ _0x2000006
000473 9ac3      	SBI  0x18,3
000474 c001      	RJMP _0x2000007
                 _0x2000006:
000475 98c3      	CBI  0x18,3
                 _0x2000007:
000476 81e9      	LDD  R30,Y+1
000477 0fee      	LSL  R30
000478 83e9      	STD  Y+1,R30
000479 dff0      	RCALL _pcd8544_delay_G100
00047a 9ac4      	SBI  0x18,4
00047b dfee      	RCALL _pcd8544_delay_G100
00047c 98c4      	CBI  0x18,4
00047d 5011      	SUBI R17,LOW(1)
00047e f781      	BRNE _0x2000004
00047f 9ac0      	SBI  0x18,0
000480 8118      	LDD  R17,Y+0
000481 c03c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_wrcmd:
                 ; .FSTART _pcd8544_wrcmd
000482 93aa      	ST   -Y,R26
000483 98c2      	CBI  0x18,2
000484 81a8      	LD   R26,Y
000485 dfe5      	RCALL _pcd8544_wrbus_G100
000486 940c 08c6 	JMP  _0x2120008
                 ; .FEND
                 _pcd8544_wrdata_G100:
                 ; .FSTART _pcd8544_wrdata_G100
000488 93aa      	ST   -Y,R26
000489 9ac2      	SBI  0x18,2
00048a 81a8      	LD   R26,Y
00048b dfdf      	RCALL _pcd8544_wrbus_G100
00048c 940c 08c6 	JMP  _0x2120008
                 ; .FEND
                 _pcd8544_setaddr_G100:
                 ; .FSTART _pcd8544_setaddr_G100
00048e 93aa      	ST   -Y,R26
00048f 931a      	ST   -Y,R17
000490 81e9      	LDD  R30,Y+1
000491 95e6      	LSR  R30
000492 95e6      	LSR  R30
000493 95e6      	LSR  R30
000494 2f1e      	MOV  R17,R30
000495 e5e4      	LDI  R30,LOW(84)
000496 9fe1      	MUL  R30,R17
000497 01f0      	MOVW R30,R0
000498 01df      	MOVW R26,R30
000499 81ea      	LDD  R30,Y+2
00049a e0f0      	LDI  R31,0
00049b 0fea      	ADD  R30,R26
00049c 1ffb      	ADC  R31,R27
00049d 93e0 02a2 	STS  _gfx_addr_G100,R30
00049f 93f0 02a3 	STS  _gfx_addr_G100+1,R31
0004a1 2fe1      	MOV  R30,R17
0004a2 8118      	LDD  R17,Y+0
0004a3 9623      	ADIW R28,3
0004a4 9508      	RET
                 ; .FEND
                 _pcd8544_gotoxy:
                 ; .FSTART _pcd8544_gotoxy
0004a5 93aa      	ST   -Y,R26
0004a6 81e9      	LDD  R30,Y+1
0004a7 68e0      	ORI  R30,0x80
0004a8 2fae      	MOV  R26,R30
0004a9 dfd8      	RCALL _pcd8544_wrcmd
0004aa 81e9      	LDD  R30,Y+1
0004ab 93ea      	ST   -Y,R30
0004ac 81a9      	LDD  R26,Y+1
0004ad dfe0      	RCALL _pcd8544_setaddr_G100
0004ae 64e0      	ORI  R30,0x40
0004af 2fae      	MOV  R26,R30
0004b0 dfd1      	RCALL _pcd8544_wrcmd
0004b1 c00c      	RJMP _0x212000D
                 ; .FEND
                 _pcd8544_rdbyte:
                 ; .FSTART _pcd8544_rdbyte
0004b2 93aa      	ST   -Y,R26
0004b3 81e9      	LDD  R30,Y+1
0004b4 93ea      	ST   -Y,R30
0004b5 81a9      	LDD  R26,Y+1
0004b6 dfee      	RCALL _pcd8544_gotoxy
0004b7 91e0 02a2 	LDS  R30,_gfx_addr_G100
0004b9 91f0 02a3 	LDS  R31,_gfx_addr_G100+1
0004bb 55ec      	SUBI R30,LOW(-_gfx_buffer_G100)
0004bc 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G100)
0004bd 81e0      	LD   R30,Z
                 _0x212000D:
0004be 9622      	ADIW R28,2
0004bf 9508      	RET
                 ; .FEND
                 _pcd8544_wrbyte:
                 ; .FSTART _pcd8544_wrbyte
0004c0 93aa      	ST   -Y,R26
0004c1 940e 0cba 	CALL SUBOPT_0xE
0004c3 9731      	SBIW R30,1
0004c4 55ec      	SUBI R30,LOW(-_gfx_buffer_G100)
0004c5 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G100)
0004c6 81a8      	LD   R26,Y
0004c7 83a0      	STD  Z+0,R26
0004c8 dfbf      	RCALL _pcd8544_wrdata_G100
0004c9 940c 08c6 	JMP  _0x2120008
                 ; .FEND
                 _glcd_init:
                 ; .FSTART _glcd_init
0004cb 93ba      	ST   -Y,R27
0004cc 93aa      	ST   -Y,R26
0004cd 940e 0f33 	CALL __SAVELOCR4
0004cf 9ab8      	SBI  0x17,0
0004d0 9ac0      	SBI  0x18,0
0004d1 9abc      	SBI  0x17,4
0004d2 98c4      	CBI  0x18,4
0004d3 9abb      	SBI  0x17,3
0004d4 9aba      	SBI  0x17,2
0004d5 9ab9      	SBI  0x17,1
0004d6 98c1      	CBI  0x18,1
0004d7 e0aa      	LDI  R26,LOW(10)
0004d8 e0b0      	LDI  R27,0
0004d9 940e 0d6a 	CALL _delay_ms
0004db 9ac1      	SBI  0x18,1
0004dc 81ec      	LDD  R30,Y+4
0004dd 81fd      	LDD  R31,Y+4+1
0004de 9730      	SBIW R30,0
0004df f121      	BREQ _0x2000008
0004e0 81e6      	LDD  R30,Z+6
0004e1 70e3      	ANDI R30,LOW(0x3)
0004e2 2f1e      	MOV  R17,R30
0004e3 81ec      	LDD  R30,Y+4
0004e4 81fd      	LDD  R31,Y+4+1
0004e5 81e6      	LDD  R30,Z+6
0004e6 95e6      	LSR  R30
0004e7 95e6      	LSR  R30
0004e8 70e7      	ANDI R30,LOW(0x7)
0004e9 2f0e      	MOV  R16,R30
0004ea 81ec      	LDD  R30,Y+4
0004eb 81fd      	LDD  R31,Y+4+1
0004ec 81e7      	LDD  R30,Z+7
0004ed 77ef      	ANDI R30,0x7F
0004ee 2f3e      	MOV  R19,R30
0004ef 81ac      	LDD  R26,Y+4
0004f0 81bd      	LDD  R27,Y+4+1
0004f1 940e 0efd 	CALL __GETW1P
                +
0004f3 93e0 026c+STS _glcd_state + ( 4 ) , R30
0004f5 93f0 026d+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
0004f7 9612      	ADIW R26,2
0004f8 940e 0efd 	CALL __GETW1P
                +
0004fa 93e0 0281+STS _glcd_state + ( 25 ) , R30
0004fc 93f0 0282+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
0004fe 81ac      	LDD  R26,Y+4
0004ff 81bd      	LDD  R27,Y+4+1
000500 9614      	ADIW R26,4
000501 940e 0efd 	CALL __GETW1P
000503 c00d      	RJMP _0x20000A0
                 _0x2000008:
000504 e010      	LDI  R17,LOW(0)
000505 e003      	LDI  R16,LOW(3)
000506 e332      	LDI  R19,LOW(50)
000507 e0e0      	LDI  R30,LOW(0)
000508 e0f0      	LDI  R31,HIGH(0)
                +
000509 93e0 026c+STS _glcd_state + ( 4 ) , R30
00050b 93f0 026d+STS _glcd_state + ( 4 ) + 1 , R31
                 	__PUTW1MN _glcd_state,4
                +
00050d 93e0 0281+STS _glcd_state + ( 25 ) , R30
00050f 93f0 0282+STS _glcd_state + ( 25 ) + 1 , R31
                 	__PUTW1MN _glcd_state,25
                 _0x20000A0:
                +
000511 93e0 0283+STS _glcd_state + ( 27 ) , R30
000513 93f0 0284+STS _glcd_state + ( 27 ) + 1 , R31
                 	__PUTW1MN _glcd_state,27
000515 e2a1      	LDI  R26,LOW(33)
000516 df6b      	RCALL _pcd8544_wrcmd
000517 2fe1      	MOV  R30,R17
000518 60e4      	ORI  R30,4
000519 2fae      	MOV  R26,R30
00051a df67      	RCALL _pcd8544_wrcmd
00051b 2fe0      	MOV  R30,R16
00051c 61e0      	ORI  R30,0x10
00051d 2fae      	MOV  R26,R30
00051e df63      	RCALL _pcd8544_wrcmd
00051f 2fe3      	MOV  R30,R19
000520 68e0      	ORI  R30,0x80
000521 2fae      	MOV  R26,R30
000522 df5f      	RCALL _pcd8544_wrcmd
000523 e2a0      	LDI  R26,LOW(32)
000524 df5d      	RCALL _pcd8544_wrcmd
000525 e0a1      	LDI  R26,LOW(1)
000526 d023      	RCALL _glcd_display
000527 e0e1      	LDI  R30,LOW(1)
000528 93e0 0268 	STS  _glcd_state,R30
00052a e0e0      	LDI  R30,LOW(0)
                +
00052b 93e0 0269+STS _glcd_state + ( 1 ) , R30
                 	__PUTB1MN _glcd_state,1
00052d e0e1      	LDI  R30,LOW(1)
                +
00052e 93e0 026e+STS _glcd_state + ( 6 ) , R30
                 	__PUTB1MN _glcd_state,6
                +
000530 93e0 026f+STS _glcd_state + ( 7 ) , R30
                 	__PUTB1MN _glcd_state,7
                +
000532 93e0 0270+STS _glcd_state + ( 8 ) , R30
                 	__PUTB1MN _glcd_state,8
000534 efef      	LDI  R30,LOW(255)
                +
000535 93e0 0271+STS _glcd_state + ( 9 ) , R30
                 	__PUTB1MN _glcd_state,9
000537 e0e1      	LDI  R30,LOW(1)
                +
000538 93e0 0278+STS _glcd_state + ( 16 ) , R30
                 	__PUTB1MN _glcd_state,16
                +
00053a e7e9     +LDI R30 , LOW ( _glcd_state + ( 17 ) )
00053b e0f2     +LDI R31 , HIGH ( _glcd_state + ( 17 ) )
                 	__POINTW1MN _glcd_state,17
00053c 93fa      	ST   -Y,R31
00053d 93ea      	ST   -Y,R30
00053e efef      	LDI  R30,LOW(255)
00053f 93ea      	ST   -Y,R30
000540 e0a8      	LDI  R26,LOW(8)
000541 e0b0      	LDI  R27,0
000542 940e 0b09 	CALL _memset
000544 d010      	RCALL _glcd_clear
000545 e0e1      	LDI  R30,LOW(1)
000546 940e 0f3a 	CALL __LOADLOCR4
                 _0x212000C:
000548 9626      	ADIW R28,6
000549 9508      	RET
                 ; .FEND
                 _glcd_display:
                 ; .FSTART _glcd_display
00054a 93aa      	ST   -Y,R26
00054b 81e8      	LD   R30,Y
00054c 30e0      	CPI  R30,0
00054d f011      	BREQ _0x200000A
00054e e0ec      	LDI  R30,LOW(12)
00054f c001      	RJMP _0x200000B
                 _0x200000A:
000550 e0e8      	LDI  R30,LOW(8)
                 _0x200000B:
000551 2fae      	MOV  R26,R30
000552 df2f      	RCALL _pcd8544_wrcmd
000553 940c 08c6 	JMP  _0x2120008
                 ; .FEND
                 _glcd_clear:
                 ; .FSTART _glcd_clear
000555 940e 0f33 	CALL __SAVELOCR4
000557 e030      	LDI  R19,0
                +
000558 91e0 0269+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
00055a 30e0      	CPI  R30,0
00055b f009      	BREQ _0x200000D
00055c ef3f      	LDI  R19,LOW(255)
                 _0x200000D:
00055d e0e0      	LDI  R30,LOW(0)
00055e 93ea      	ST   -Y,R30
00055f e0a0      	LDI  R26,LOW(0)
000560 df44      	RCALL _pcd8544_gotoxy
                +
000561 ef08     +LDI R16 , LOW ( 504 )
000562 e011     +LDI R17 , HIGH ( 504 )
                 	__GETWRN 16,17,504
                 _0x200000E:
000563 01f8      	MOVW R30,R16
                +
000564 5001     +SUBI R16 , LOW ( 1 )
000565 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
000566 9730      	SBIW R30,0
000567 f019      	BREQ _0x2000010
000568 2fa3      	MOV  R26,R19
000569 df56      	RCALL _pcd8544_wrbyte
00056a cff8      	RJMP _0x200000E
                 _0x2000010:
00056b e0e0      	LDI  R30,LOW(0)
00056c 93ea      	ST   -Y,R30
00056d e0a0      	LDI  R26,LOW(0)
00056e d345      	RCALL _glcd_moveto
00056f 940e 0f3a 	CALL __LOADLOCR4
000571 9624      	ADIW R28,4
000572 9508      	RET
                 ; .FEND
                 _pcd8544_wrmasked_G100:
                 ; .FSTART _pcd8544_wrmasked_G100
000573 93aa      	ST   -Y,R26
000574 931a      	ST   -Y,R17
000575 81ed      	LDD  R30,Y+5
000576 93ea      	ST   -Y,R30
000577 81ad      	LDD  R26,Y+5
000578 df39      	RCALL _pcd8544_rdbyte
000579 2f1e      	MOV  R17,R30
00057a 81e9      	LDD  R30,Y+1
00057b 30e7      	CPI  R30,LOW(0x7)
00057c f011      	BREQ _0x2000020
00057d 30e8      	CPI  R30,LOW(0x8)
00057e f439      	BRNE _0x2000021
                 _0x2000020:
00057f 81eb      	LDD  R30,Y+3
000580 93ea      	ST   -Y,R30
000581 81aa      	LDD  R26,Y+2
000582 940e 0be4 	CALL _glcd_mappixcolor1bit
000584 83eb      	STD  Y+3,R30
000585 c008      	RJMP _0x2000022
                 _0x2000021:
000586 30e3      	CPI  R30,LOW(0x3)
000587 f421      	BRNE _0x2000024
000588 81eb      	LDD  R30,Y+3
000589 95e0      	COM  R30
00058a 83eb      	STD  Y+3,R30
00058b c002      	RJMP _0x2000025
                 _0x2000024:
00058c 30e0      	CPI  R30,0
00058d f421      	BRNE _0x2000026
                 _0x2000025:
                 _0x2000022:
00058e 81ea      	LDD  R30,Y+2
00058f 95e0      	COM  R30
000590 231e      	AND  R17,R30
000591 c002      	RJMP _0x2000027
                 _0x2000026:
000592 30e2      	CPI  R30,LOW(0x2)
000593 f429      	BRNE _0x2000028
                 _0x2000027:
000594 81ea      	LDD  R30,Y+2
000595 81ab      	LDD  R26,Y+3
000596 23ea      	AND  R30,R26
000597 2b1e      	OR   R17,R30
000598 c00e      	RJMP _0x200001E
                 _0x2000028:
000599 30e1      	CPI  R30,LOW(0x1)
00059a f429      	BRNE _0x2000029
00059b 81ea      	LDD  R30,Y+2
00059c 81ab      	LDD  R26,Y+3
00059d 23ea      	AND  R30,R26
00059e 271e      	EOR  R17,R30
00059f c007      	RJMP _0x200001E
                 _0x2000029:
0005a0 30e4      	CPI  R30,LOW(0x4)
0005a1 f429      	BRNE _0x200001E
0005a2 81ea      	LDD  R30,Y+2
0005a3 95e0      	COM  R30
0005a4 81ab      	LDD  R26,Y+3
0005a5 2bea      	OR   R30,R26
0005a6 231e      	AND  R17,R30
                 _0x200001E:
0005a7 2fa1      	MOV  R26,R17
0005a8 df17      	RCALL _pcd8544_wrbyte
0005a9 8118      	LDD  R17,Y+0
0005aa 940c 0ba0 	JMP  _0x2120005
                 ; .FEND
                 _glcd_block:
                 ; .FSTART _glcd_block
0005ac 93aa      	ST   -Y,R26
0005ad 9723      	SBIW R28,3
0005ae 940e 0f31 	CALL __SAVELOCR6
0005b0 89a8      	LDD  R26,Y+16
0005b1 35a4      	CPI  R26,LOW(0x54)
0005b2 f448      	BRSH _0x200002C
0005b3 85af      	LDD  R26,Y+15
0005b4 33a0      	CPI  R26,LOW(0x30)
0005b5 f430      	BRSH _0x200002C
0005b6 85ae      	LDD  R26,Y+14
0005b7 30a0      	CPI  R26,LOW(0x0)
0005b8 f019      	BREQ _0x200002C
0005b9 85ad      	LDD  R26,Y+13
0005ba 30a0      	CPI  R26,LOW(0x0)
0005bb f409      	BRNE _0x200002B
                 _0x200002C:
0005bc c1d5      	RJMP _0x212000B
                 _0x200002B:
0005bd 85ee      	LDD  R30,Y+14
0005be 87e8      	STD  Y+8,R30
0005bf 89a8      	LDD  R26,Y+16
0005c0 27bb      	CLR  R27
0005c1 85ee      	LDD  R30,Y+14
0005c2 e0f0      	LDI  R31,0
0005c3 0fae      	ADD  R26,R30
0005c4 1fbf      	ADC  R27,R31
0005c5 35a5      	CPI  R26,LOW(0x55)
0005c6 e0e0      	LDI  R30,HIGH(0x55)
0005c7 07be      	CPC  R27,R30
0005c8 f020      	BRLO _0x200002E
0005c9 89a8      	LDD  R26,Y+16
0005ca e5e4      	LDI  R30,LOW(84)
0005cb 1bea      	SUB  R30,R26
0005cc 87ee      	STD  Y+14,R30
                 _0x200002E:
0005cd 852d      	LDD  R18,Y+13
0005ce 85af      	LDD  R26,Y+15
0005cf 27bb      	CLR  R27
0005d0 85ed      	LDD  R30,Y+13
0005d1 e0f0      	LDI  R31,0
0005d2 0fae      	ADD  R26,R30
0005d3 1fbf      	ADC  R27,R31
0005d4 97d1      	SBIW R26,49
0005d5 f020      	BRLO _0x200002F
0005d6 85af      	LDD  R26,Y+15
0005d7 e3e0      	LDI  R30,LOW(48)
0005d8 1bea      	SUB  R30,R26
0005d9 87ed      	STD  Y+13,R30
                 _0x200002F:
0005da 85a9      	LDD  R26,Y+9
0005db 30a6      	CPI  R26,LOW(0x6)
0005dc f009      	BREQ PC+2
0005dd c05b      	RJMP _0x2000030
0005de 85ec      	LDD  R30,Y+12
0005df 30e1      	CPI  R30,LOW(0x1)
0005e0 f409      	BRNE _0x2000034
0005e1 c1b0      	RJMP _0x212000B
                 _0x2000034:
0005e2 30e3      	CPI  R30,LOW(0x3)
0005e3 f439      	BRNE _0x2000037
                +
0005e4 91e0 0283+LDS R30 , _glcd_state + ( 27 )
0005e6 91f0 0284+LDS R31 , _glcd_state + ( 27 ) + 1
                 	__GETW1MN _glcd_state,27
0005e8 9730      	SBIW R30,0
0005e9 f409      	BRNE _0x2000036
0005ea c1a7      	RJMP _0x212000B
                 _0x2000036:
                 _0x2000037:
0005eb 8508      	LDD  R16,Y+8
0005ec 85ed      	LDD  R30,Y+13
0005ed 95e6      	LSR  R30
0005ee 95e6      	LSR  R30
0005ef 95e6      	LSR  R30
0005f0 2f3e      	MOV  R19,R30
0005f1 2fe2      	MOV  R30,R18
0005f2 70e7      	ANDI R30,LOW(0x7)
0005f3 f419      	BRNE _0x2000039
0005f4 85ad      	LDD  R26,Y+13
0005f5 172a      	CP   R18,R26
0005f6 f0e9      	BREQ _0x2000038
                 _0x2000039:
0005f7 2fa0      	MOV  R26,R16
0005f8 27bb      	CLR  R27
0005f9 2fe3      	MOV  R30,R19
0005fa e0f0      	LDI  R31,0
0005fb 940e 0ecc 	CALL __MULW12U
0005fd 85aa      	LDD  R26,Y+10
0005fe 85bb      	LDD  R27,Y+10+1
0005ff 940e 0cbd 	CALL SUBOPT_0xF
000601 9526      	LSR  R18
000602 9526      	LSR  R18
000603 9526      	LSR  R18
000604 2f53      	MOV  R21,R19
                 _0x200003B:
000605 935f      	PUSH R21
000606 5f5f      	SUBI R21,-1
000607 2fe2      	MOV  R30,R18
000608 91af      	POP  R26
000609 17ea      	CP   R30,R26
00060a f048      	BRLO _0x200003D
00060b 2f10      	MOV  R17,R16
                 _0x200003E:
00060c 2fe1      	MOV  R30,R17
00060d 5011      	SUBI R17,1
00060e 30e0      	CPI  R30,0
00060f f019      	BREQ _0x2000040
000610 940e 0cc2 	CALL SUBOPT_0x10
000612 cff9      	RJMP _0x200003E
                 _0x2000040:
000613 cff1      	RJMP _0x200003B
                 _0x200003D:
                 _0x2000038:
000614 85ae      	LDD  R26,Y+14
000615 170a      	CP   R16,R26
000616 f111      	BREQ _0x2000041
000617 85ee      	LDD  R30,Y+14
000618 85aa      	LDD  R26,Y+10
000619 85bb      	LDD  R27,Y+10+1
00061a e0f0      	LDI  R31,0
00061b 940e 0cbd 	CALL SUBOPT_0xF
00061d 85ed      	LDD  R30,Y+13
00061e 70e7      	ANDI R30,LOW(0x7)
00061f f009      	BREQ _0x2000042
000620 5f3f      	SUBI R19,-LOW(1)
                 _0x2000042:
000621 e020      	LDI  R18,LOW(0)
                 _0x2000043:
000622 932f      	PUSH R18
000623 5f2f      	SUBI R18,-1
000624 2fe3      	MOV  R30,R19
000625 91af      	POP  R26
000626 17ae      	CP   R26,R30
000627 f488      	BRSH _0x2000045
000628 851e      	LDD  R17,Y+14
                 _0x2000046:
000629 931f      	PUSH R17
00062a 5f1f      	SUBI R17,-1
00062b 2fe0      	MOV  R30,R16
00062c 91af      	POP  R26
00062d 17ae      	CP   R26,R30
00062e f418      	BRSH _0x2000048
00062f 940e 0cc2 	CALL SUBOPT_0x10
000631 cff7      	RJMP _0x2000046
                 _0x2000048:
000632 85ee      	LDD  R30,Y+14
000633 81ae      	LDD  R26,Y+6
000634 81bf      	LDD  R27,Y+6+1
000635 e0f0      	LDI  R31,0
000636 940e 0cbd 	CALL SUBOPT_0xF
000638 cfe9      	RJMP _0x2000043
                 _0x2000045:
                 _0x2000041:
                 _0x2000030:
000639 85ef      	LDD  R30,Y+15
00063a 70e7      	ANDI R30,LOW(0x7)
00063b 2f3e      	MOV  R19,R30
                 _0x2000049:
00063c 85ed      	LDD  R30,Y+13
00063d 30e0      	CPI  R30,0
00063e f409      	BRNE PC+2
00063f c152      	RJMP _0x200004B
000640 85ea      	LDD  R30,Y+10
000641 85fb      	LDD  R31,Y+10+1
000642 83ee      	STD  Y+6,R30
000643 83ff      	STD  Y+6+1,R31
000644 e010      	LDI  R17,LOW(0)
000645 8908      	LDD  R16,Y+16
000646 3030      	CPI  R19,0
000647 f009      	BREQ PC+2
000648 c066      	RJMP _0x200004C
000649 85ad      	LDD  R26,Y+13
00064a 30a8      	CPI  R26,LOW(0x8)
00064b f408      	BRSH PC+2
00064c c05d      	RJMP _0x200004D
00064d 85e9      	LDD  R30,Y+9
00064e 30e0      	CPI  R30,0
00064f f011      	BREQ _0x2000052
000650 30e3      	CPI  R30,LOW(0x3)
000651 f409      	BRNE _0x2000053
                 _0x2000052:
000652 c002      	RJMP _0x2000054
                 _0x2000053:
000653 30e7      	CPI  R30,LOW(0x7)
000654 f409      	BRNE _0x2000055
                 _0x2000054:
000655 c002      	RJMP _0x2000056
                 _0x2000055:
000656 30e8      	CPI  R30,LOW(0x8)
000657 f409      	BRNE _0x2000057
                 _0x2000056:
000658 c002      	RJMP _0x2000058
                 _0x2000057:
000659 30e9      	CPI  R30,LOW(0x9)
00065a f409      	BRNE _0x2000059
                 _0x2000058:
00065b c002      	RJMP _0x200005A
                 _0x2000059:
00065c 30ea      	CPI  R30,LOW(0xA)
00065d f421      	BRNE _0x200005B
                 _0x200005A:
00065e 930a      	ST   -Y,R16
00065f 89a8      	LDD  R26,Y+16
000660 de44      	RCALL _pcd8544_gotoxy
000661 c004      	RJMP _0x2000050
                 _0x200005B:
000662 30e6      	CPI  R30,LOW(0x6)
000663 f411      	BRNE _0x2000050
000664 940e 0ccf 	CALL SUBOPT_0x11
                 _0x2000050:
                 _0x200005D:
000666 931f      	PUSH R17
000667 5f1f      	SUBI R17,-1
000668 85ee      	LDD  R30,Y+14
000669 91af      	POP  R26
00066a 17ae      	CP   R26,R30
00066b f5b8      	BRSH _0x200005F
00066c 85a9      	LDD  R26,Y+9
00066d 30a6      	CPI  R26,LOW(0x6)
00066e f469      	BRNE _0x2000060
00066f 940e 0cd3 	CALL SUBOPT_0x12
000671 93fa      	ST   -Y,R31
000672 93ea      	ST   -Y,R30
000673 940e 0cba 	CALL SUBOPT_0xE
000675 9731      	SBIW R30,1
000676 55ec      	SUBI R30,LOW(-_gfx_buffer_G100)
000677 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G100)
000678 81a0      	LD   R26,Z
000679 940e 0c2b 	CALL _glcd_writemem
00067b c026      	RJMP _0x2000061
                 _0x2000060:
00067c 85e9      	LDD  R30,Y+9
00067d 30e9      	CPI  R30,LOW(0x9)
00067e f411      	BRNE _0x2000065
00067f e050      	LDI  R21,LOW(0)
000680 c00e      	RJMP _0x2000066
                 _0x2000065:
000681 30ea      	CPI  R30,LOW(0xA)
000682 f411      	BRNE _0x2000064
000683 ef5f      	LDI  R21,LOW(255)
000684 c00a      	RJMP _0x2000066
                 _0x2000064:
000685 940e 0cd3 	CALL SUBOPT_0x12
000687 940e 0cdc 	CALL SUBOPT_0x13
000689 2f5e      	MOV  R21,R30
00068a 85e9      	LDD  R30,Y+9
00068b 30e7      	CPI  R30,LOW(0x7)
00068c f011      	BREQ _0x200006D
00068d 30e8      	CPI  R30,LOW(0x8)
00068e f421      	BRNE _0x200006E
                 _0x200006D:
                 _0x2000066:
00068f 940e 0ce2 	CALL SUBOPT_0x14
000691 2f5e      	MOV  R21,R30
000692 c006      	RJMP _0x200006F
                 _0x200006E:
000693 30e3      	CPI  R30,LOW(0x3)
000694 f411      	BRNE _0x2000071
000695 9550      	COM  R21
000696 c002      	RJMP _0x2000072
                 _0x2000071:
000697 30e0      	CPI  R30,0
000698 f419      	BRNE _0x2000074
                 _0x2000072:
                 _0x200006F:
000699 2fa5      	MOV  R26,R21
00069a dded      	RCALL _pcd8544_wrdata_G100
00069b c006      	RJMP _0x200006B
                 _0x2000074:
00069c 940e 0ce6 	CALL SUBOPT_0x15
00069e efef      	LDI  R30,LOW(255)
00069f 93ea      	ST   -Y,R30
0006a0 85ad      	LDD  R26,Y+13
0006a1 ded1      	RCALL _pcd8544_wrmasked_G100
                 _0x200006B:
                 _0x2000061:
0006a2 cfc3      	RJMP _0x200005D
                 _0x200005F:
0006a3 85ef      	LDD  R30,Y+15
0006a4 5fe8      	SUBI R30,-LOW(8)
0006a5 87ef      	STD  Y+15,R30
0006a6 85ed      	LDD  R30,Y+13
0006a7 50e8      	SUBI R30,LOW(8)
0006a8 87ed      	STD  Y+13,R30
0006a9 c0df      	RJMP _0x2000075
                 _0x200004D:
0006aa 855d      	LDD  R21,Y+13
0006ab e020      	LDI  R18,LOW(0)
0006ac e0e0      	LDI  R30,LOW(0)
0006ad 87ed      	STD  Y+13,R30
0006ae c081      	RJMP _0x2000076
                 _0x200004C:
0006af 2fe3      	MOV  R30,R19
0006b0 85ad      	LDD  R26,Y+13
0006b1 0fae      	ADD  R26,R30
0006b2 30a9      	CPI  R26,LOW(0x9)
0006b3 f420      	BRSH _0x2000077
0006b4 852d      	LDD  R18,Y+13
0006b5 e0e0      	LDI  R30,LOW(0)
0006b6 87ed      	STD  Y+13,R30
0006b7 c003      	RJMP _0x2000078
                 _0x2000077:
0006b8 e0e8      	LDI  R30,LOW(8)
0006b9 1be3      	SUB  R30,R19
0006ba 2f2e      	MOV  R18,R30
                 _0x2000078:
0006bb 933a      	ST   -Y,R19
0006bc 2fa2      	MOV  R26,R18
0006bd 940e 0bd9 	CALL _glcd_getmask
0006bf 2f4e      	MOV  R20,R30
0006c0 85e9      	LDD  R30,Y+9
0006c1 30e6      	CPI  R30,LOW(0x6)
0006c2 f529      	BRNE _0x200007C
0006c3 940e 0ccf 	CALL SUBOPT_0x11
                 _0x200007D:
0006c5 931f      	PUSH R17
0006c6 5f1f      	SUBI R17,-1
0006c7 85ee      	LDD  R30,Y+14
0006c8 91af      	POP  R26
0006c9 17ae      	CP   R26,R30
0006ca f4e0      	BRSH _0x200007F
0006cb 940e 0cba 	CALL SUBOPT_0xE
0006cd 9731      	SBIW R30,1
0006ce 55ec      	SUBI R30,LOW(-_gfx_buffer_G100)
0006cf 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G100)
0006d0 81e0      	LD   R30,Z
0006d1 23e4      	AND  R30,R20
0006d2 2fae      	MOV  R26,R30
0006d3 2fe3      	MOV  R30,R19
0006d4 940e 0ebf 	CALL __LSRB12
0006d6 940e 0cec 	CALL SUBOPT_0x16
0006d8 2fe3      	MOV  R30,R19
0006d9 2fa4      	MOV  R26,R20
0006da 940e 0ebf 	CALL __LSRB12
0006dc 95e0      	COM  R30
0006dd 21e1      	AND  R30,R1
0006de 2b5e      	OR   R21,R30
0006df 940e 0cd3 	CALL SUBOPT_0x12
0006e1 93fa      	ST   -Y,R31
0006e2 93ea      	ST   -Y,R30
0006e3 2fa5      	MOV  R26,R21
0006e4 940e 0c2b 	CALL _glcd_writemem
0006e6 cfde      	RJMP _0x200007D
                 _0x200007F:
0006e7 c02c      	RJMP _0x200007B
                 _0x200007C:
0006e8 30e9      	CPI  R30,LOW(0x9)
0006e9 f411      	BRNE _0x2000080
0006ea e050      	LDI  R21,LOW(0)
0006eb c003      	RJMP _0x2000081
                 _0x2000080:
0006ec 30ea      	CPI  R30,LOW(0xA)
0006ed f4a9      	BRNE _0x2000087
0006ee ef5f      	LDI  R21,LOW(255)
                 _0x2000081:
0006ef 940e 0ce2 	CALL SUBOPT_0x14
0006f1 2fae      	MOV  R26,R30
0006f2 2fe3      	MOV  R30,R19
0006f3 940e 0eb7 	CALL __LSLB12
0006f5 2f5e      	MOV  R21,R30
                 _0x2000084:
0006f6 931f      	PUSH R17
0006f7 5f1f      	SUBI R17,-1
0006f8 85ee      	LDD  R30,Y+14
0006f9 91af      	POP  R26
0006fa 17ae      	CP   R26,R30
0006fb f430      	BRSH _0x2000086
0006fc 940e 0ce6 	CALL SUBOPT_0x15
0006fe 934a      	ST   -Y,R20
0006ff e0a0      	LDI  R26,LOW(0)
000700 de72      	RCALL _pcd8544_wrmasked_G100
000701 cff4      	RJMP _0x2000084
                 _0x2000086:
000702 c011      	RJMP _0x200007B
                 _0x2000087:
                 _0x2000088:
000703 931f      	PUSH R17
000704 5f1f      	SUBI R17,-1
000705 85ee      	LDD  R30,Y+14
000706 91af      	POP  R26
000707 17ae      	CP   R26,R30
000708 f458      	BRSH _0x200008A
000709 940e 0cf7 	CALL SUBOPT_0x17
00070b 2fae      	MOV  R26,R30
00070c 2fe3      	MOV  R30,R19
00070d 940e 0eb7 	CALL __LSLB12
00070f 93ea      	ST   -Y,R30
000710 934a      	ST   -Y,R20
000711 85ad      	LDD  R26,Y+13
000712 de60      	RCALL _pcd8544_wrmasked_G100
000713 cfef      	RJMP _0x2000088
                 _0x200008A:
                 _0x200007B:
000714 85ed      	LDD  R30,Y+13
000715 30e0      	CPI  R30,0
000716 f409      	BRNE _0x200008B
000717 c07a      	RJMP _0x200004B
                 _0x200008B:
000718 85ad      	LDD  R26,Y+13
000719 30a8      	CPI  R26,LOW(0x8)
00071a f428      	BRSH _0x200008C
00071b 85ed      	LDD  R30,Y+13
00071c 1be2      	SUB  R30,R18
00071d 2f5e      	MOV  R21,R30
00071e e0e0      	LDI  R30,LOW(0)
00071f c003      	RJMP _0x20000A1
                 _0x200008C:
000720 2f53      	MOV  R21,R19
000721 85ed      	LDD  R30,Y+13
000722 50e8      	SUBI R30,LOW(8)
                 _0x20000A1:
000723 87ed      	STD  Y+13,R30
000724 e010      	LDI  R17,LOW(0)
000725 85ef      	LDD  R30,Y+15
000726 5fe8      	SUBI R30,-LOW(8)
000727 87ef      	STD  Y+15,R30
000728 e0e8      	LDI  R30,LOW(8)
000729 1be3      	SUB  R30,R19
00072a 2f2e      	MOV  R18,R30
00072b 8908      	LDD  R16,Y+16
00072c 85ea      	LDD  R30,Y+10
00072d 85fb      	LDD  R31,Y+10+1
00072e 83ee      	STD  Y+6,R30
00072f 83ff      	STD  Y+6+1,R31
                 _0x2000076:
000730 2fe5      	MOV  R30,R21
000731 e0f0      	LDI  R31,0
000732 5ce8      	SUBI R30,LOW(-__glcd_mask*2)
000733 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000734 9144      	LPM  R20,Z
000735 85e9      	LDD  R30,Y+9
000736 30e6      	CPI  R30,LOW(0x6)
000737 f529      	BRNE _0x2000091
000738 940e 0ccf 	CALL SUBOPT_0x11
                 _0x2000092:
00073a 931f      	PUSH R17
00073b 5f1f      	SUBI R17,-1
00073c 85ee      	LDD  R30,Y+14
00073d 91af      	POP  R26
00073e 17ae      	CP   R26,R30
00073f f4e0      	BRSH _0x2000094
000740 940e 0cba 	CALL SUBOPT_0xE
000742 9731      	SBIW R30,1
000743 55ec      	SUBI R30,LOW(-_gfx_buffer_G100)
000744 4ffd      	SBCI R31,HIGH(-_gfx_buffer_G100)
000745 81e0      	LD   R30,Z
000746 23e4      	AND  R30,R20
000747 2fae      	MOV  R26,R30
000748 2fe2      	MOV  R30,R18
000749 940e 0eb7 	CALL __LSLB12
00074b 940e 0cec 	CALL SUBOPT_0x16
00074d 2fe2      	MOV  R30,R18
00074e 2fa4      	MOV  R26,R20
00074f 940e 0eb7 	CALL __LSLB12
000751 95e0      	COM  R30
000752 21e1      	AND  R30,R1
000753 2b5e      	OR   R21,R30
000754 940e 0cd3 	CALL SUBOPT_0x12
000756 93fa      	ST   -Y,R31
000757 93ea      	ST   -Y,R30
000758 2fa5      	MOV  R26,R21
000759 940e 0c2b 	CALL _glcd_writemem
00075b cfde      	RJMP _0x2000092
                 _0x2000094:
00075c c02c      	RJMP _0x2000090
                 _0x2000091:
00075d 30e9      	CPI  R30,LOW(0x9)
00075e f411      	BRNE _0x2000095
00075f e050      	LDI  R21,LOW(0)
000760 c003      	RJMP _0x2000096
                 _0x2000095:
000761 30ea      	CPI  R30,LOW(0xA)
000762 f4a9      	BRNE _0x200009C
000763 ef5f      	LDI  R21,LOW(255)
                 _0x2000096:
000764 940e 0ce2 	CALL SUBOPT_0x14
000766 2fae      	MOV  R26,R30
000767 2fe2      	MOV  R30,R18
000768 940e 0ebf 	CALL __LSRB12
00076a 2f5e      	MOV  R21,R30
                 _0x2000099:
00076b 931f      	PUSH R17
00076c 5f1f      	SUBI R17,-1
00076d 85ee      	LDD  R30,Y+14
00076e 91af      	POP  R26
00076f 17ae      	CP   R26,R30
000770 f430      	BRSH _0x200009B
000771 940e 0ce6 	CALL SUBOPT_0x15
000773 934a      	ST   -Y,R20
000774 e0a0      	LDI  R26,LOW(0)
000775 ddfd      	RCALL _pcd8544_wrmasked_G100
000776 cff4      	RJMP _0x2000099
                 _0x200009B:
000777 c011      	RJMP _0x2000090
                 _0x200009C:
                 _0x200009D:
000778 931f      	PUSH R17
000779 5f1f      	SUBI R17,-1
00077a 85ee      	LDD  R30,Y+14
00077b 91af      	POP  R26
00077c 17ae      	CP   R26,R30
00077d f458      	BRSH _0x200009F
00077e 940e 0cf7 	CALL SUBOPT_0x17
000780 2fae      	MOV  R26,R30
000781 2fe2      	MOV  R30,R18
000782 940e 0ebf 	CALL __LSRB12
000784 93ea      	ST   -Y,R30
000785 934a      	ST   -Y,R20
000786 85ad      	LDD  R26,Y+13
000787 ddeb      	RCALL _pcd8544_wrmasked_G100
000788 cfef      	RJMP _0x200009D
                 _0x200009F:
                 _0x2000090:
                 _0x2000075:
000789 85e8      	LDD  R30,Y+8
00078a 85aa      	LDD  R26,Y+10
00078b 85bb      	LDD  R27,Y+10+1
00078c e0f0      	LDI  R31,0
00078d 0fea      	ADD  R30,R26
00078e 1ffb      	ADC  R31,R27
00078f 87ea      	STD  Y+10,R30
000790 87fb      	STD  Y+10+1,R31
000791 ceaa      	RJMP _0x2000049
                 _0x200004B:
                 _0x212000B:
000792 940e 0f38 	CALL __LOADLOCR6
000794 9661      	ADIW R28,17
000795 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _glcd_clipx:
                 ; .FSTART _glcd_clipx
000796 940e 0d04 	CALL SUBOPT_0x18
000798 f024      	BRLT _0x2020003
000799 e0e0      	LDI  R30,LOW(0)
00079a e0f0      	LDI  R31,HIGH(0)
00079b 940c 0be2 	JMP  _0x2120003
                 _0x2020003:
00079d 81a8      	LD   R26,Y
00079e 81b9      	LDD  R27,Y+1
00079f 35a4      	CPI  R26,LOW(0x54)
0007a0 e0e0      	LDI  R30,HIGH(0x54)
0007a1 07be      	CPC  R27,R30
0007a2 f024      	BRLT _0x2020004
0007a3 e5e3      	LDI  R30,LOW(83)
0007a4 e0f0      	LDI  R31,HIGH(83)
0007a5 940c 0be2 	JMP  _0x2120003
                 _0x2020004:
0007a7 81e8      	LD   R30,Y
0007a8 81f9      	LDD  R31,Y+1
0007a9 940c 0be2 	JMP  _0x2120003
                 ; .FEND
                 _glcd_clipy:
                 ; .FSTART _glcd_clipy
0007ab 940e 0d04 	CALL SUBOPT_0x18
0007ad f024      	BRLT _0x2020005
0007ae e0e0      	LDI  R30,LOW(0)
0007af e0f0      	LDI  R31,HIGH(0)
0007b0 940c 0be2 	JMP  _0x2120003
                 _0x2020005:
0007b2 81a8      	LD   R26,Y
0007b3 81b9      	LDD  R27,Y+1
0007b4 97d0      	SBIW R26,48
0007b5 f024      	BRLT _0x2020006
0007b6 e2ef      	LDI  R30,LOW(47)
0007b7 e0f0      	LDI  R31,HIGH(47)
0007b8 940c 0be2 	JMP  _0x2120003
                 _0x2020006:
0007ba 81e8      	LD   R30,Y
0007bb 81f9      	LDD  R31,Y+1
0007bc 940c 0be2 	JMP  _0x2120003
                 ; .FEND
                 _glcd_getcharw_G101:
                 ; .FSTART _glcd_getcharw_G101
0007be 93ba      	ST   -Y,R27
0007bf 93aa      	ST   -Y,R26
0007c0 9723      	SBIW R28,3
0007c1 940e 0d0b 	CALL SUBOPT_0x19
0007c3 018f      	MOVW R16,R30
0007c4 2e00      	MOV  R0,R16
0007c5 2a01      	OR   R0,R17
0007c6 f419      	BRNE _0x202000B
0007c7 e0e0      	LDI  R30,LOW(0)
0007c8 e0f0      	LDI  R31,HIGH(0)
0007c9 c05f      	RJMP _0x212000A
                 _0x202000B:
0007ca 940e 0d12 	CALL SUBOPT_0x1A
0007cc 820f      	STD  Y+7,R0
0007cd 940e 0d12 	CALL SUBOPT_0x1A
0007cf 820e      	STD  Y+6,R0
0007d0 940e 0d12 	CALL SUBOPT_0x1A
0007d2 8608      	STD  Y+8,R0
0007d3 85eb      	LDD  R30,Y+11
0007d4 85a8      	LDD  R26,Y+8
0007d5 17ea      	CP   R30,R26
0007d6 f418      	BRSH _0x202000C
0007d7 e0e0      	LDI  R30,LOW(0)
0007d8 e0f0      	LDI  R31,HIGH(0)
0007d9 c04f      	RJMP _0x212000A
                 _0x202000C:
0007da 01f8      	MOVW R30,R16
                +
0007db 5f0f     +SUBI R16 , LOW ( - 1 )
0007dc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0007dd 9154      	LPM  R21,Z
0007de 85a8      	LDD  R26,Y+8
0007df 27bb      	CLR  R27
0007e0 27ee      	CLR  R30
0007e1 0fa5      	ADD  R26,R21
0007e2 1fbe      	ADC  R27,R30
0007e3 85eb      	LDD  R30,Y+11
0007e4 e0f0      	LDI  R31,0
0007e5 17ea      	CP   R30,R26
0007e6 07fb      	CPC  R31,R27
0007e7 f018      	BRLO _0x202000D
0007e8 e0e0      	LDI  R30,LOW(0)
0007e9 e0f0      	LDI  R31,HIGH(0)
0007ea c03e      	RJMP _0x212000A
                 _0x202000D:
0007eb 81ee      	LDD  R30,Y+6
0007ec 95e6      	LSR  R30
0007ed 95e6      	LSR  R30
0007ee 95e6      	LSR  R30
0007ef 2f4e      	MOV  R20,R30
0007f0 81ee      	LDD  R30,Y+6
0007f1 70e7      	ANDI R30,LOW(0x7)
0007f2 f009      	BREQ _0x202000E
0007f3 5f4f      	SUBI R20,-LOW(1)
                 _0x202000E:
0007f4 81ef      	LDD  R30,Y+7
0007f5 30e0      	CPI  R30,0
0007f6 f0a1      	BREQ _0x202000F
0007f7 85a9      	LDD  R26,Y+9
0007f8 85ba      	LDD  R27,Y+9+1
0007f9 93ec      	ST   X,R30
0007fa 85a8      	LDD  R26,Y+8
0007fb 85eb      	LDD  R30,Y+11
0007fc 1bea      	SUB  R30,R26
0007fd e0f0      	LDI  R31,0
0007fe 01df      	MOVW R26,R30
0007ff 81ef      	LDD  R30,Y+7
000800 e0f0      	LDI  R31,0
000801 940e 0ecc 	CALL __MULW12U
000803 01df      	MOVW R26,R30
000804 2fe4      	MOV  R30,R20
000805 e0f0      	LDI  R31,0
000806 940e 0ecc 	CALL __MULW12U
000808 0fe0      	ADD  R30,R16
000809 1ff1      	ADC  R31,R17
00080a c01e      	RJMP _0x212000A
                 _0x202000F:
00080b 0198      	MOVW R18,R16
00080c 2fe5      	MOV  R30,R21
00080d e0f0      	LDI  R31,0
                +
00080e 0f0e     +ADD R16 , R30
00080f 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 _0x2020010:
000810 85a8      	LDD  R26,Y+8
000811 5faf      	SUBI R26,-LOW(1)
000812 87a8      	STD  Y+8,R26
000813 50a1      	SUBI R26,LOW(1)
000814 85eb      	LDD  R30,Y+11
000815 17ae      	CP   R26,R30
000816 f460      	BRSH _0x2020012
000817 01f9      	MOVW R30,R18
                +
000818 5f2f     +SUBI R18 , LOW ( - 1 )
000819 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00081a 91a4      	LPM  R26,Z
00081b e0b0      	LDI  R27,0
00081c 2fe4      	MOV  R30,R20
00081d e0f0      	LDI  R31,0
00081e 940e 0ecc 	CALL __MULW12U
                +
000820 0f0e     +ADD R16 , R30
000821 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
000822 cfed      	RJMP _0x2020010
                 _0x2020012:
000823 01f9      	MOVW R30,R18
000824 91e4      	LPM  R30,Z
000825 85a9      	LDD  R26,Y+9
000826 85ba      	LDD  R27,Y+9+1
000827 93ec      	ST   X,R30
000828 01f8      	MOVW R30,R16
                 _0x212000A:
000829 940e 0f38 	CALL __LOADLOCR6
00082b 962c      	ADIW R28,12
00082c 9508      	RET
                 ; .FEND
                 _glcd_new_line_G101:
                 ; .FSTART _glcd_new_line_G101
00082d e0e0      	LDI  R30,LOW(0)
                +
00082e 93e0 026a+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
                +
000830 91a0 026b+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
000832 27bb      	CLR  R27
000833 940e 0d17 	CALL SUBOPT_0x1B
000835 e0f0      	LDI  R31,0
000836 0fae      	ADD  R26,R30
000837 1fbf      	ADC  R27,R31
                +
000838 91e0 026f+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
00083a e0f0      	LDI  R31,0
00083b 0fae      	ADD  R26,R30
00083c 1fbf      	ADC  R27,R31
00083d df6d      	RCALL _glcd_clipy
                +
00083e 93e0 026b+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
000840 9508      	RET
                 ; .FEND
                 _glcd_putchar:
                 ; .FSTART _glcd_putchar
000841 93aa      	ST   -Y,R26
000842 9721      	SBIW R28,1
000843 940e 0d0b 	CALL SUBOPT_0x19
000845 9730      	SBIW R30,0
000846 f409      	BRNE PC+2
000847 c055      	RJMP _0x202001F
000848 81af      	LDD  R26,Y+7
000849 30aa      	CPI  R26,LOW(0xA)
00084a f409      	BRNE _0x2020020
00084b c04f      	RJMP _0x2020021
                 _0x2020020:
00084c 81ef      	LDD  R30,Y+7
00084d 93ea      	ST   -Y,R30
00084e 01de      	MOVW R26,R28
00084f 9617      	ADIW R26,7
000850 df6d      	RCALL _glcd_getcharw_G101
000851 01af      	MOVW R20,R30
000852 9730      	SBIW R30,0
000853 f409      	BRNE _0x2020022
000854 c04a      	RJMP _0x2120009
                 _0x2020022:
                +
000855 91e0 026e+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000857 81ae      	LDD  R26,Y+6
000858 0fea      	ADD  R30,R26
000859 2f3e      	MOV  R19,R30
                +
00085a 91a0 026a+LDS R26 , _glcd_state + ( 2 )
                 	__GETB2MN _glcd_state,2
00085c 27bb      	CLR  R27
00085d e0f0      	LDI  R31,0
00085e 0fea      	ADD  R30,R26
00085f 1ffb      	ADC  R31,R27
000860 018f      	MOVW R16,R30
                +
000861 3505     +CPI R16 , LOW ( 85 )
000862 e0e0     +LDI R30 , HIGH ( 85 )
000863 071e     +CPC R17 , R30
                 	__CPWRN 16,17,85
000864 f018      	BRLO _0x2020023
000865 2f03      	MOV  R16,R19
000866 2711      	CLR  R17
000867 dfc5      	RCALL _glcd_new_line_G101
                 _0x2020023:
                +
000868 91e0 026a+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00086a 93ea      	ST   -Y,R30
                +
00086b 91e0 026b+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
00086d 93ea      	ST   -Y,R30
00086e 85e8      	LDD  R30,Y+8
00086f 93ea      	ST   -Y,R30
000870 940e 0d17 	CALL SUBOPT_0x1B
000872 93ea      	ST   -Y,R30
000873 e0e1      	LDI  R30,LOW(1)
000874 93ea      	ST   -Y,R30
000875 935a      	ST   -Y,R21
000876 934a      	ST   -Y,R20
000877 e0a7      	LDI  R26,LOW(7)
000878 dd33      	RCALL _glcd_block
                +
000879 91e0 026a+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00087b 81ae      	LDD  R26,Y+6
00087c 0fea      	ADD  R30,R26
00087d 93ea      	ST   -Y,R30
                +
00087e 91e0 026b+LDS R30 , _glcd_state + ( 3 )
                 	__GETB1MN _glcd_state,3
000880 93ea      	ST   -Y,R30
                +
000881 91e0 026e+LDS R30 , _glcd_state + ( 6 )
                 	__GETB1MN _glcd_state,6
000883 93ea      	ST   -Y,R30
000884 940e 0d17 	CALL SUBOPT_0x1B
000886 940e 0d1e 	CALL SUBOPT_0x1C
                +
000888 91e0 026a+LDS R30 , _glcd_state + ( 2 )
                 	__GETB1MN _glcd_state,2
00088a 93ea      	ST   -Y,R30
                +
00088b 91a0 026b+LDS R26 , _glcd_state + ( 3 )
                 	__GETB2MN _glcd_state,3
00088d 940e 0d17 	CALL SUBOPT_0x1B
00088f 0fea      	ADD  R30,R26
000890 93ea      	ST   -Y,R30
000891 933a      	ST   -Y,R19
                +
000892 91e0 026f+LDS R30 , _glcd_state + ( 7 )
                 	__GETB1MN _glcd_state,7
000894 940e 0d1e 	CALL SUBOPT_0x1C
000896 e5e4      	LDI  R30,LOW(84)
000897 e0f0      	LDI  R31,HIGH(84)
000898 17e0      	CP   R30,R16
000899 07f1      	CPC  R31,R17
00089a f411      	BRNE _0x2020024
                 _0x2020021:
00089b df91      	RCALL _glcd_new_line_G101
00089c c002      	RJMP _0x2120009
                 _0x2020024:
                 _0x202001F:
                +
00089d 9300 026a+STS _glcd_state + ( 2 ) , R16
                 	__PUTBMRN _glcd_state,2,16
                 _0x2120009:
00089f 940e 0f38 	CALL __LOADLOCR6
0008a1 9628      	ADIW R28,8
0008a2 9508      	RET
                 ; .FEND
                 _glcd_outtext:
                 ; .FSTART _glcd_outtext
0008a3 93ba      	ST   -Y,R27
0008a4 93aa      	ST   -Y,R26
0008a5 931a      	ST   -Y,R17
                 _0x202002E:
0008a6 81a9      	LDD  R26,Y+1
0008a7 81ba      	LDD  R27,Y+1+1
0008a8 91ed      	LD   R30,X+
0008a9 83a9      	STD  Y+1,R26
0008aa 83ba      	STD  Y+1+1,R27
0008ab 2f1e      	MOV  R17,R30
0008ac 30e0      	CPI  R30,0
0008ad f019      	BREQ _0x2020030
0008ae 2fa1      	MOV  R26,R17
0008af df91      	RCALL _glcd_putchar
0008b0 cff5      	RJMP _0x202002E
                 _0x2020030:
0008b1 8118      	LDD  R17,Y+0
0008b2 940c 0c29 	JMP  _0x2120002
                 ; .FEND
                 _glcd_moveto:
                 ; .FSTART _glcd_moveto
0008b4 93aa      	ST   -Y,R26
0008b5 81a9      	LDD  R26,Y+1
0008b6 27bb      	CLR  R27
0008b7 dede      	RCALL _glcd_clipx
                +
0008b8 93e0 026a+STS _glcd_state + ( 2 ) , R30
                 	__PUTB1MN _glcd_state,2
0008ba 81a8      	LD   R26,Y
0008bb 27bb      	CLR  R27
0008bc deee      	RCALL _glcd_clipy
                +
0008bd 93e0 026b+STS _glcd_state + ( 3 ) , R30
                 	__PUTB1MN _glcd_state,3
0008bf 940c 0be2 	JMP  _0x2120003
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0008c1 93aa      	ST   -Y,R26
                 putchar0:
0008c2 9b5d           sbis usr,udre
0008c3 cffe           rjmp putchar0
0008c4 81e8           ld   r30,y
0008c5 b9ec           out  udr,r30
                 _0x2120008:
0008c6 9621      	ADIW R28,1
0008c7 9508      	RET
                 ; .FEND
                 _gets:
                 ; .FSTART _gets
0008c8 93ba      	ST   -Y,R27
0008c9 93aa      	ST   -Y,R26
0008ca 940e 0f31 	CALL __SAVELOCR6
                +
0008cc 810e     +LDD R16 , Y + 6
0008cd 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                +
0008ce 8528     +LDD R18 , Y + 8
0008cf 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                 _0x2040009:
0008d0 2e00      	MOV  R0,R16
0008d1 2a01      	OR   R0,R17
0008d2 f0e1      	BREQ _0x204000B
                 _0x204000C:
0008d3 940e 01db 	CALL _getchar
0008d5 2f5e      	MOV  R21,R30
0008d6 3058      	CPI  R21,8
0008d7 f451      	BRNE _0x204000D
0008d8 81ae      	LDD  R26,Y+6
0008d9 81bf      	LDD  R27,Y+6+1
0008da 170a      	CP   R16,R26
0008db 071b      	CPC  R17,R27
0008dc f420      	BRSH _0x204000E
                +
0008dd 5021     +SUBI R18 , LOW ( 1 )
0008de 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                +
0008df 5f0f     +SUBI R16 , LOW ( - 1 )
0008e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 _0x204000E:
0008e1 cff1      	RJMP _0x204000C
                 _0x204000D:
0008e2 305a      	CPI  R21,10
0008e3 f059      	BREQ _0x204000B
0008e4 933f      	PUSH R19
0008e5 932f      	PUSH R18
                +
0008e6 5f2f     +SUBI R18 , LOW ( - 1 )
0008e7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0008e8 2fe5      	MOV  R30,R21
0008e9 91af      	POP  R26
0008ea 91bf      	POP  R27
0008eb 93ec      	ST   X,R30
                +
0008ec 5001     +SUBI R16 , LOW ( 1 )
0008ed 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
0008ee cfe1      	RJMP _0x2040009
                 _0x204000B:
0008ef 01d9      	MOVW R26,R18
0008f0 e0e0      	LDI  R30,LOW(0)
0008f1 93ec      	ST   X,R30
0008f2 85e8      	LDD  R30,Y+8
0008f3 85f9      	LDD  R31,Y+8+1
0008f4 940e 0f38 	CALL __LOADLOCR6
0008f6 962a      	ADIW R28,10
0008f7 9508      	RET
                 ; .FEND
                 _put_usart_G102:
                 ; .FSTART _put_usart_G102
0008f8 93ba      	ST   -Y,R27
0008f9 93aa      	ST   -Y,R26
0008fa 81aa      	LDD  R26,Y+2
0008fb dfc5      	RCALL _putchar
0008fc 81a8      	LD   R26,Y
0008fd 81b9      	LDD  R27,Y+1
0008fe 940e 0c5e 	CALL SUBOPT_0x0
000900 940c 0c29 	JMP  _0x2120002
                 ; .FEND
                 _put_buff_G102:
                 ; .FSTART _put_buff_G102
000902 93ba      	ST   -Y,R27
000903 93aa      	ST   -Y,R26
000904 931a      	ST   -Y,R17
000905 930a      	ST   -Y,R16
000906 81aa      	LDD  R26,Y+2
000907 81bb      	LDD  R27,Y+2+1
000908 9612      	ADIW R26,2
000909 940e 0efd 	CALL __GETW1P
00090b 9730      	SBIW R30,0
00090c f129      	BREQ _0x2040010
00090d 81aa      	LDD  R26,Y+2
00090e 81bb      	LDD  R27,Y+2+1
00090f 9614      	ADIW R26,4
000910 940e 0efd 	CALL __GETW1P
000912 018f      	MOVW R16,R30
000913 9730      	SBIW R30,0
000914 f061      	BREQ _0x2040012
                +
000915 3002     +CPI R16 , LOW ( 2 )
000916 e0e0     +LDI R30 , HIGH ( 2 )
000917 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000918 f080      	BRLO _0x2040013
000919 01f8      	MOVW R30,R16
00091a 9731      	SBIW R30,1
00091b 018f      	MOVW R16,R30
                +
00091c 81aa     +LDD R26 , Y + 2
00091d 81bb     +LDD R27 , Y + 2 + 1
00091e 9614     +ADIW R26 , 4
00091f 93ed     +ST X + , R30
000920 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2040012:
000921 81aa      	LDD  R26,Y+2
000922 81bb      	LDD  R27,Y+2+1
000923 9612      	ADIW R26,2
000924 940e 0c5e 	CALL SUBOPT_0x0
000926 9731      	SBIW R30,1
000927 81ac      	LDD  R26,Y+4
000928 83a0      	STD  Z+0,R26
                 _0x2040013:
000929 81aa      	LDD  R26,Y+2
00092a 81bb      	LDD  R27,Y+2+1
00092b 940e 0efd 	CALL __GETW1P
00092d 23ff      	TST  R31
00092e f012      	BRMI _0x2040014
00092f 940e 0c5e 	CALL SUBOPT_0x0
                 _0x2040014:
000931 c006      	RJMP _0x2040015
                 _0x2040010:
000932 81aa      	LDD  R26,Y+2
000933 81bb      	LDD  R27,Y+2+1
000934 efef      	LDI  R30,LOW(65535)
000935 efff      	LDI  R31,HIGH(65535)
000936 93ed      	ST   X+,R30
000937 93fc      	ST   X,R31
                 _0x2040015:
000938 8119      	LDD  R17,Y+1
000939 8108      	LDD  R16,Y+0
00093a c1dc      	RJMP _0x2120006
                 ; .FEND
                 __print_G102:
                 ; .FSTART __print_G102
00093b 93ba      	ST   -Y,R27
00093c 93aa      	ST   -Y,R26
00093d 972b      	SBIW R28,11
00093e 940e 0f31 	CALL __SAVELOCR6
000940 e010      	LDI  R17,0
000941 89a9      	LDD  R26,Y+17
000942 89ba      	LDD  R27,Y+17+1
000943 e0e0      	LDI  R30,LOW(0)
000944 e0f0      	LDI  R31,HIGH(0)
000945 93ed      	ST   X+,R30
000946 93fc      	ST   X,R31
                 _0x2040016:
000947 89ef      	LDD  R30,Y+23
000948 8df8      	LDD  R31,Y+23+1
000949 9631      	ADIW R30,1
00094a 8bef      	STD  Y+23,R30
00094b 8ff8      	STD  Y+23+1,R31
00094c 9731      	SBIW R30,1
00094d 91e4      	LPM  R30,Z
00094e 2f2e      	MOV  R18,R30
00094f 30e0      	CPI  R30,0
000950 f409      	BRNE PC+2
000951 c162      	RJMP _0x2040018
000952 2fe1      	MOV  R30,R17
000953 30e0      	CPI  R30,0
000954 f439      	BRNE _0x204001C
000955 3225      	CPI  R18,37
000956 f411      	BRNE _0x204001D
000957 e011      	LDI  R17,LOW(1)
000958 c002      	RJMP _0x204001E
                 _0x204001D:
000959 940e 0d28 	CALL SUBOPT_0x1D
                 _0x204001E:
00095b c157      	RJMP _0x204001B
                 _0x204001C:
00095c 30e1      	CPI  R30,LOW(0x1)
00095d f4a9      	BRNE _0x204001F
00095e 3225      	CPI  R18,37
00095f f419      	BRNE _0x2040020
000960 940e 0d28 	CALL SUBOPT_0x1D
000962 c14f      	RJMP _0x20400D5
                 _0x2040020:
000963 e012      	LDI  R17,LOW(2)
000964 e040      	LDI  R20,LOW(0)
000965 e000      	LDI  R16,LOW(0)
000966 322d      	CPI  R18,45
000967 f411      	BRNE _0x2040021
000968 e001      	LDI  R16,LOW(1)
000969 c149      	RJMP _0x204001B
                 _0x2040021:
00096a 322b      	CPI  R18,43
00096b f411      	BRNE _0x2040022
00096c e24b      	LDI  R20,LOW(43)
00096d c145      	RJMP _0x204001B
                 _0x2040022:
00096e 3220      	CPI  R18,32
00096f f411      	BRNE _0x2040023
000970 e240      	LDI  R20,LOW(32)
000971 c141      	RJMP _0x204001B
                 _0x2040023:
000972 c002      	RJMP _0x2040024
                 _0x204001F:
000973 30e2      	CPI  R30,LOW(0x2)
000974 f439      	BRNE _0x2040025
                 _0x2040024:
000975 e050      	LDI  R21,LOW(0)
000976 e013      	LDI  R17,LOW(3)
000977 3320      	CPI  R18,48
000978 f411      	BRNE _0x2040026
000979 6800      	ORI  R16,LOW(128)
00097a c138      	RJMP _0x204001B
                 _0x2040026:
00097b c002      	RJMP _0x2040027
                 _0x2040025:
00097c 30e3      	CPI  R30,LOW(0x3)
00097d f491      	BRNE _0x2040028
                 _0x2040027:
00097e 3320      	CPI  R18,48
00097f f010      	BRLO _0x204002A
000980 332a      	CPI  R18,58
000981 f008      	BRLO _0x204002B
                 _0x204002A:
000982 c007      	RJMP _0x2040029
                 _0x204002B:
000983 e0aa      	LDI  R26,LOW(10)
000984 9f5a      	MUL  R21,R26
000985 2d50      	MOV  R21,R0
000986 2fe2      	MOV  R30,R18
000987 53e0      	SUBI R30,LOW(48)
000988 0f5e      	ADD  R21,R30
000989 c129      	RJMP _0x204001B
                 _0x2040029:
00098a 362c      	CPI  R18,108
00098b f419      	BRNE _0x204002C
00098c 6002      	ORI  R16,LOW(2)
00098d e015      	LDI  R17,LOW(5)
00098e c124      	RJMP _0x204001B
                 _0x204002C:
00098f c003      	RJMP _0x204002D
                 _0x2040028:
000990 30e5      	CPI  R30,LOW(0x5)
000991 f009      	BREQ PC+2
000992 c120      	RJMP _0x204001B
                 _0x204002D:
000993 2fe2      	MOV  R30,R18
000994 36e3      	CPI  R30,LOW(0x63)
000995 f449      	BRNE _0x2040032
000996 940e 0d2f 	CALL SUBOPT_0x1E
000998 89ed      	LDD  R30,Y+21
000999 89fe      	LDD  R31,Y+21+1
00099a 81a4      	LDD  R26,Z+4
00099b 93aa      	ST   -Y,R26
00099c 940e 0d35 	CALL SUBOPT_0x1F
00099e c113      	RJMP _0x2040033
                 _0x2040032:
00099f 37e3      	CPI  R30,LOW(0x73)
0009a0 f441      	BRNE _0x2040035
0009a1 940e 0d2f 	CALL SUBOPT_0x1E
0009a3 940e 0d3b 	CALL SUBOPT_0x20
0009a5 940e 0b19 	CALL _strlen
0009a7 2f1e      	MOV  R17,R30
0009a8 c00a      	RJMP _0x2040036
                 _0x2040035:
0009a9 37e0      	CPI  R30,LOW(0x70)
0009aa f469      	BRNE _0x2040038
0009ab 940e 0d2f 	CALL SUBOPT_0x1E
0009ad 940e 0d3b 	CALL SUBOPT_0x20
0009af 940e 0b25 	CALL _strlenf
0009b1 2f1e      	MOV  R17,R30
0009b2 6008      	ORI  R16,LOW(8)
                 _0x2040036:
0009b3 770f      	ANDI R16,LOW(127)
0009b4 e0e0      	LDI  R30,LOW(0)
0009b5 8be8      	STD  Y+16,R30
0009b6 e030      	LDI  R19,LOW(0)
0009b7 c06e      	RJMP _0x2040039
                 _0x2040038:
0009b8 36e4      	CPI  R30,LOW(0x64)
0009b9 f011      	BREQ _0x204003C
0009ba 36e9      	CPI  R30,LOW(0x69)
0009bb f411      	BRNE _0x204003D
                 _0x204003C:
0009bc 6004      	ORI  R16,LOW(4)
0009bd c002      	RJMP _0x204003E
                 _0x204003D:
0009be 37e5      	CPI  R30,LOW(0x75)
0009bf f4a1      	BRNE _0x204003F
                 _0x204003E:
0009c0 e0ea      	LDI  R30,LOW(10)
0009c1 8be8      	STD  Y+16,R30
0009c2 ff01      	SBRS R16,1
0009c3 c008      	RJMP _0x2040040
                +
0009c4 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0009c5 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0009c6 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0009c7 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0009c8 940e 0d45 	CALL SUBOPT_0x21
0009ca e01a      	LDI  R17,LOW(10)
0009cb c022      	RJMP _0x2040041
                 _0x2040040:
                +
0009cc e1e0     +LDI R30 , LOW ( 0x2710 )
0009cd e2f7     +LDI R31 , HIGH ( 0x2710 )
0009ce e060     +LDI R22 , BYTE3 ( 0x2710 )
0009cf e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0009d0 940e 0d45 	CALL SUBOPT_0x21
0009d2 e015      	LDI  R17,LOW(5)
0009d3 c01a      	RJMP _0x2040041
                 _0x204003F:
0009d4 35e8      	CPI  R30,LOW(0x58)
0009d5 f411      	BRNE _0x2040043
0009d6 6008      	ORI  R16,LOW(8)
0009d7 c003      	RJMP _0x2040044
                 _0x2040043:
0009d8 37e8      	CPI  R30,LOW(0x78)
0009d9 f009      	BREQ PC+2
0009da c0d7      	RJMP _0x2040077
                 _0x2040044:
0009db e1e0      	LDI  R30,LOW(16)
0009dc 8be8      	STD  Y+16,R30
0009dd ff01      	SBRS R16,1
0009de c008      	RJMP _0x2040046
                +
0009df e0e0     +LDI R30 , LOW ( 0x10000000 )
0009e0 e0f0     +LDI R31 , HIGH ( 0x10000000 )
0009e1 e060     +LDI R22 , BYTE3 ( 0x10000000 )
0009e2 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0009e3 940e 0d45 	CALL SUBOPT_0x21
0009e5 e018      	LDI  R17,LOW(8)
0009e6 c007      	RJMP _0x2040041
                 _0x2040046:
                +
0009e7 e0e0     +LDI R30 , LOW ( 0x1000 )
0009e8 e1f0     +LDI R31 , HIGH ( 0x1000 )
0009e9 e060     +LDI R22 , BYTE3 ( 0x1000 )
0009ea e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0009eb 940e 0d45 	CALL SUBOPT_0x21
0009ed e014      	LDI  R17,LOW(4)
                 _0x2040041:
0009ee ff01      	SBRS R16,1
0009ef c008      	RJMP _0x2040047
0009f0 940e 0d2f 	CALL SUBOPT_0x1E
0009f2 89ad      	LDD  R26,Y+21
0009f3 89be      	LDD  R27,Y+21+1
0009f4 9614      	ADIW R26,4
0009f5 940e 0f01 	CALL __GETD1P
0009f7 c015      	RJMP _0x20400D6
                 _0x2040047:
0009f8 ff02      	SBRS R16,2
0009f9 c00a      	RJMP _0x2040049
0009fa 940e 0d2f 	CALL SUBOPT_0x1E
0009fc 89ad      	LDD  R26,Y+21
0009fd 89be      	LDD  R27,Y+21+1
0009fe 9614      	ADIW R26,4
0009ff 940e 0efd 	CALL __GETW1P
000a01 940e 0ec7 	CALL __CWD1
000a03 c009      	RJMP _0x20400D6
                 _0x2040049:
000a04 940e 0d2f 	CALL SUBOPT_0x1E
000a06 89ad      	LDD  R26,Y+21
000a07 89be      	LDD  R27,Y+21+1
000a08 9614      	ADIW R26,4
000a09 940e 0efd 	CALL __GETW1P
000a0b 2766      	CLR  R22
000a0c 2777      	CLR  R23
                 _0x20400D6:
                +
000a0d 87ec     +STD Y + 12 , R30
000a0e 87fd     +STD Y + 12 + 1 , R31
000a0f 876e     +STD Y + 12 + 2 , R22
000a10 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000a11 ff02      	SBRS R16,2
000a12 c013      	RJMP _0x204004B
000a13 85af      	LDD  R26,Y+15
000a14 23aa      	TST  R26
000a15 f45a      	BRPL _0x204004C
                +
000a16 85ec     +LDD R30 , Y + 12
000a17 85fd     +LDD R31 , Y + 12 + 1
000a18 856e     +LDD R22 , Y + 12 + 2
000a19 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000a1a 940e 0eaf 	CALL __ANEGD1
                +
000a1c 87ec     +STD Y + 12 , R30
000a1d 87fd     +STD Y + 12 + 1 , R31
000a1e 876e     +STD Y + 12 + 2 , R22
000a1f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000a20 e24d      	LDI  R20,LOW(45)
                 _0x204004C:
000a21 3040      	CPI  R20,0
000a22 f011      	BREQ _0x204004D
000a23 5f1f      	SUBI R17,-LOW(1)
000a24 c001      	RJMP _0x204004E
                 _0x204004D:
000a25 7f0b      	ANDI R16,LOW(251)
                 _0x204004E:
                 _0x204004B:
                 _0x2040039:
000a26 fd00      	SBRC R16,0
000a27 c011      	RJMP _0x204004F
                 _0x2040050:
000a28 1715      	CP   R17,R21
000a29 f478      	BRSH _0x2040052
000a2a ff07      	SBRS R16,7
000a2b c008      	RJMP _0x2040053
000a2c ff02      	SBRS R16,2
000a2d c004      	RJMP _0x2040054
000a2e 7f0b      	ANDI R16,LOW(251)
000a2f 2f24      	MOV  R18,R20
000a30 5011      	SUBI R17,LOW(1)
000a31 c001      	RJMP _0x2040055
                 _0x2040054:
000a32 e320      	LDI  R18,LOW(48)
                 _0x2040055:
000a33 c001      	RJMP _0x2040056
                 _0x2040053:
000a34 e220      	LDI  R18,LOW(32)
                 _0x2040056:
000a35 940e 0d28 	CALL SUBOPT_0x1D
000a37 5051      	SUBI R21,LOW(1)
000a38 cfef      	RJMP _0x2040050
                 _0x2040052:
                 _0x204004F:
000a39 2f31      	MOV  R19,R17
000a3a 89e8      	LDD  R30,Y+16
000a3b 30e0      	CPI  R30,0
000a3c f4b9      	BRNE _0x2040057
                 _0x2040058:
000a3d 3030      	CPI  R19,0
000a3e f0a1      	BREQ _0x204005A
000a3f ff03      	SBRS R16,3
000a40 c006      	RJMP _0x204005B
000a41 81ee      	LDD  R30,Y+6
000a42 81ff      	LDD  R31,Y+6+1
000a43 9125      	LPM  R18,Z+
000a44 83ee      	STD  Y+6,R30
000a45 83ff      	STD  Y+6+1,R31
000a46 c005      	RJMP _0x204005C
                 _0x204005B:
000a47 81ae      	LDD  R26,Y+6
000a48 81bf      	LDD  R27,Y+6+1
000a49 912d      	LD   R18,X+
000a4a 83ae      	STD  Y+6,R26
000a4b 83bf      	STD  Y+6+1,R27
                 _0x204005C:
000a4c 940e 0d28 	CALL SUBOPT_0x1D
000a4e 3050      	CPI  R21,0
000a4f f009      	BREQ _0x204005D
000a50 5051      	SUBI R21,LOW(1)
                 _0x204005D:
000a51 5031      	SUBI R19,LOW(1)
000a52 cfea      	RJMP _0x2040058
                 _0x204005A:
000a53 c054      	RJMP _0x204005E
                 _0x2040057:
                 _0x2040060:
000a54 940e 0d4a 	CALL SUBOPT_0x22
000a56 940e 0ed4 	CALL __DIVD21U
000a58 2f2e      	MOV  R18,R30
000a59 302a      	CPI  R18,10
000a5a f030      	BRLO _0x2040062
000a5b ff03      	SBRS R16,3
000a5c c002      	RJMP _0x2040063
000a5d 5c29      	SUBI R18,-LOW(55)
000a5e c001      	RJMP _0x2040064
                 _0x2040063:
000a5f 5a29      	SUBI R18,-LOW(87)
                 _0x2040064:
000a60 c001      	RJMP _0x2040065
                 _0x2040062:
000a61 5d20      	SUBI R18,-LOW(48)
                 _0x2040065:
000a62 fd04      	SBRC R16,4
000a63 c022      	RJMP _0x2040067
000a64 3321      	CPI  R18,49
000a65 f460      	BRSH _0x2040069
                +
000a66 85a8     +LDD R26 , Y + 8
000a67 85b9     +LDD R27 , Y + 8 + 1
000a68 858a     +LDD R24 , Y + 8 + 2
000a69 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
000a6a 30a1     +CPI R26 , LOW ( 0x1 )
000a6b e0e0     +LDI R30 , HIGH ( 0x1 )
000a6c 07be     +CPC R27 , R30
000a6d e0e0     +LDI R30 , BYTE3 ( 0x1 )
000a6e 078e     +CPC R24 , R30
000a6f e0e0     +LDI R30 , BYTE4 ( 0x1 )
000a70 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000a71 f409      	BRNE _0x2040068
                 _0x2040069:
000a72 c009      	RJMP _0x204006B
                 _0x2040068:
000a73 1753      	CP   R21,R19
000a74 f010      	BRLO _0x204006D
000a75 ff00      	SBRS R16,0
000a76 c001      	RJMP _0x204006E
                 _0x204006D:
000a77 c013      	RJMP _0x204006C
                 _0x204006E:
000a78 e220      	LDI  R18,LOW(32)
000a79 ff07      	SBRS R16,7
000a7a c00b      	RJMP _0x204006F
000a7b e320      	LDI  R18,LOW(48)
                 _0x204006B:
000a7c 6100      	ORI  R16,LOW(16)
000a7d ff02      	SBRS R16,2
000a7e c007      	RJMP _0x2040070
000a7f 7f0b      	ANDI R16,LOW(251)
000a80 934a      	ST   -Y,R20
000a81 940e 0d35 	CALL SUBOPT_0x1F
000a83 3050      	CPI  R21,0
000a84 f009      	BREQ _0x2040071
000a85 5051      	SUBI R21,LOW(1)
                 _0x2040071:
                 _0x2040070:
                 _0x204006F:
                 _0x2040067:
000a86 940e 0d28 	CALL SUBOPT_0x1D
000a88 3050      	CPI  R21,0
000a89 f009      	BREQ _0x2040072
000a8a 5051      	SUBI R21,LOW(1)
                 _0x2040072:
                 _0x204006C:
000a8b 5031      	SUBI R19,LOW(1)
000a8c 940e 0d4a 	CALL SUBOPT_0x22
000a8e 940e 0ef9 	CALL __MODD21U
                +
000a90 87ec     +STD Y + 12 , R30
000a91 87fd     +STD Y + 12 + 1 , R31
000a92 876e     +STD Y + 12 + 2 , R22
000a93 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000a94 89e8      	LDD  R30,Y+16
                +
000a95 85a8     +LDD R26 , Y + 8
000a96 85b9     +LDD R27 , Y + 8 + 1
000a97 858a     +LDD R24 , Y + 8 + 2
000a98 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000a99 27ff      	CLR  R31
000a9a 2766      	CLR  R22
000a9b 2777      	CLR  R23
000a9c 940e 0ed4 	CALL __DIVD21U
000a9e 940e 0d45 	CALL SUBOPT_0x21
                +
000aa0 85e8     +LDD R30 , Y + 8
000aa1 85f9     +LDD R31 , Y + 8 + 1
000aa2 856a     +LDD R22 , Y + 8 + 2
000aa3 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
000aa4 940e 0f29 	CALL __CPD10
000aa6 f009      	BREQ _0x2040061
000aa7 cfac      	RJMP _0x2040060
                 _0x2040061:
                 _0x204005E:
000aa8 ff00      	SBRS R16,0
000aa9 c008      	RJMP _0x2040073
                 _0x2040074:
000aaa 3050      	CPI  R21,0
000aab f031      	BREQ _0x2040076
000aac 5051      	SUBI R21,LOW(1)
000aad e2e0      	LDI  R30,LOW(32)
000aae 93ea      	ST   -Y,R30
000aaf 940e 0d35 	CALL SUBOPT_0x1F
000ab1 cff8      	RJMP _0x2040074
                 _0x2040076:
                 _0x2040073:
                 _0x2040077:
                 _0x2040033:
                 _0x20400D5:
000ab2 e010      	LDI  R17,LOW(0)
                 _0x204001B:
000ab3 ce93      	RJMP _0x2040016
                 _0x2040018:
000ab4 89a9      	LDD  R26,Y+17
000ab5 89ba      	LDD  R27,Y+17+1
000ab6 940e 0efd 	CALL __GETW1P
000ab8 940e 0f38 	CALL __LOADLOCR6
000aba 9669      	ADIW R28,25
000abb 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000abc 92ff      	PUSH R15
000abd 2ef8      	MOV  R15,R24
000abe 9726      	SBIW R28,6
000abf 940e 0f33 	CALL __SAVELOCR4
000ac1 940e 0d53 	CALL SUBOPT_0x23
000ac3 9730      	SBIW R30,0
000ac4 f419      	BRNE _0x2040078
000ac5 efef      	LDI  R30,LOW(65535)
000ac6 efff      	LDI  R31,HIGH(65535)
000ac7 c01d      	RJMP _0x2120007
                 _0x2040078:
000ac8 01de      	MOVW R26,R28
000ac9 9616      	ADIW R26,6
000aca 940e 0eab 	CALL __ADDW2R15
000acc 018d      	MOVW R16,R26
000acd 940e 0d53 	CALL SUBOPT_0x23
000acf 83ee      	STD  Y+6,R30
000ad0 83ff      	STD  Y+6+1,R31
000ad1 e0e0      	LDI  R30,LOW(0)
000ad2 87e8      	STD  Y+8,R30
000ad3 87e9      	STD  Y+8+1,R30
000ad4 01de      	MOVW R26,R28
000ad5 961a      	ADIW R26,10
000ad6 940e 0d5a 	CALL SUBOPT_0x24
000ad8 e0e2      	LDI  R30,LOW(_put_buff_G102)
000ad9 e0f9      	LDI  R31,HIGH(_put_buff_G102)
000ada 93fa      	ST   -Y,R31
000adb 93ea      	ST   -Y,R30
000adc 01de      	MOVW R26,R28
000add 961a      	ADIW R26,10
000ade de5c      	RCALL __print_G102
000adf 019f      	MOVW R18,R30
000ae0 81ae      	LDD  R26,Y+6
000ae1 81bf      	LDD  R27,Y+6+1
000ae2 e0e0      	LDI  R30,LOW(0)
000ae3 93ec      	ST   X,R30
000ae4 01f9      	MOVW R30,R18
                 _0x2120007:
000ae5 940e 0f3a 	CALL __LOADLOCR4
000ae7 962a      	ADIW R28,10
000ae8 90ff      	POP  R15
000ae9 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000aea 92ff      	PUSH R15
000aeb 2ef8      	MOV  R15,R24
000aec 9726      	SBIW R28,6
000aed 931a      	ST   -Y,R17
000aee 930a      	ST   -Y,R16
000aef 01de      	MOVW R26,R28
000af0 9614      	ADIW R26,4
000af1 940e 0eab 	CALL __ADDW2R15
000af3 018d      	MOVW R16,R26
000af4 e0e0      	LDI  R30,LOW(0)
000af5 83ec      	STD  Y+4,R30
000af6 83ed      	STD  Y+4+1,R30
000af7 83ee      	STD  Y+6,R30
000af8 83ef      	STD  Y+6+1,R30
000af9 01de      	MOVW R26,R28
000afa 9618      	ADIW R26,8
000afb 940e 0d5a 	CALL SUBOPT_0x24
000afd efe8      	LDI  R30,LOW(_put_usart_G102)
000afe e0f8      	LDI  R31,HIGH(_put_usart_G102)
000aff 93fa      	ST   -Y,R31
000b00 93ea      	ST   -Y,R30
000b01 01de      	MOVW R26,R28
000b02 9618      	ADIW R26,8
000b03 de37      	RCALL __print_G102
000b04 8119      	LDD  R17,Y+1
000b05 8108      	LDD  R16,Y+0
000b06 9628      	ADIW R28,8
000b07 90ff      	POP  R15
000b08 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _memset:
                 ; .FSTART _memset
000b09 93ba      	ST   -Y,R27
000b0a 93aa      	ST   -Y,R26
000b0b 81b9          ldd  r27,y+1
000b0c 81a8          ld   r26,y
000b0d 9610          adiw r26,0
000b0e f031          breq memset1
000b0f 81fc          ldd  r31,y+4
000b10 81eb          ldd  r30,y+3
000b11 816a          ldd  r22,y+2
                 memset0:
000b12 9361          st   z+,r22
000b13 9711          sbiw r26,1
000b14 f7e9          brne memset0
                 memset1:
000b15 81eb          ldd  r30,y+3
000b16 81fc          ldd  r31,y+4
                 _0x2120006:
000b17 9625      	ADIW R28,5
000b18 9508      	RET
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000b19 93ba      	ST   -Y,R27
000b1a 93aa      	ST   -Y,R26
000b1b 91a9          ld   r26,y+
000b1c 91b9          ld   r27,y+
000b1d 27ee          clr  r30
000b1e 27ff          clr  r31
                 strlen0:
000b1f 916d          ld   r22,x+
000b20 2366          tst  r22
000b21 f011          breq strlen1
000b22 9631          adiw r30,1
000b23 cffb          rjmp strlen0
                 strlen1:
000b24 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000b25 93ba      	ST   -Y,R27
000b26 93aa      	ST   -Y,R26
000b27 27aa          clr  r26
000b28 27bb          clr  r27
000b29 91e9          ld   r30,y+
000b2a 91f9          ld   r31,y+
                 strlenf0:
000b2b 9005      	lpm  r0,z+
000b2c 2000          tst  r0
000b2d f011          breq strlenf1
000b2e 9611          adiw r26,1
000b2f cffb          rjmp strlenf0
                 strlenf1:
000b30 01fd          movw r30,r26
000b31 9508          ret
                 ; .FEND
                 _strpbrkf:
                 ; .FSTART _strpbrkf
000b32 93ba      	ST   -Y,R27
000b33 93aa      	ST   -Y,R26
000b34 81bb          ldd  r27,y+3
000b35 81aa          ldd  r26,y+2
                 strpbrkf0:
000b36 916c          ld   r22,x
000b37 2366          tst  r22
000b38 f061          breq strpbrkf2
000b39 81f9          ldd  r31,y+1
000b3a 81e8          ld   r30,y
                 strpbrkf1:
000b3b 95c8      	lpm
000b3c 2000          tst  r0
000b3d f029          breq strpbrkf3
000b3e 9631          adiw r30,1
000b3f 1560          cp   r22,r0
000b40 f7d1          brne strpbrkf1
000b41 01fd          movw r30,r26
000b42 c004          rjmp strpbrkf4
                 strpbrkf3:
000b43 9611          adiw r26,1
000b44 cff1          rjmp strpbrkf0
                 strpbrkf2:
000b45 27ee          clr  r30
000b46 27ff          clr  r31
                 strpbrkf4:
000b47 940c 0c48 	JMP  _0x2120001
                 ; .FEND
                 _strspnf:
                 ; .FSTART _strspnf
000b49 93ba      	ST   -Y,R27
000b4a 93aa      	ST   -Y,R26
000b4b 81bb          ldd  r27,y+3
000b4c 81aa          ldd  r26,y+2
000b4d 2788          clr  r24
000b4e 2799          clr  r25
                 strspnf0:
000b4f 916d          ld   r22,x+
000b50 2366          tst  r22
000b51 f049          breq strspnf2
000b52 81f9          ldd  r31,y+1
000b53 81e8          ld   r30,y
                 strspnf1:
000b54 9005      	lpm  r0,z+
000b55 2000          tst  r0
000b56 f021          breq strspnf2
000b57 1560          cp   r22,r0
000b58 f7d9          brne strspnf1
000b59 9601          adiw r24,1
000b5a cff4          rjmp strspnf0
                 strspnf2:
000b5b 01fc          movw r30,r24
000b5c 940c 0c48 	JMP  _0x2120001
                 ; .FEND
                 _strtok:
                 ; .FSTART _strtok
000b5e 93ba      	ST   -Y,R27
000b5f 93aa      	ST   -Y,R26
000b60 931a      	ST   -Y,R17
000b61 930a      	ST   -Y,R16
000b62 81ec      	LDD  R30,Y+4
000b63 81fd      	LDD  R31,Y+4+1
000b64 9730      	SBIW R30,0
000b65 f479      	BRNE _0x2060003
000b66 91e0 049c 	LDS  R30,_p_S1030026000
000b68 91f0 049d 	LDS  R31,_p_S1030026000+1
000b6a 9730      	SBIW R30,0
000b6b f419      	BRNE _0x2060004
000b6c e0e0      	LDI  R30,LOW(0)
000b6d e0f0      	LDI  R31,HIGH(0)
000b6e c02f      	RJMP _0x2120004
                 _0x2060004:
000b6f 91e0 049c 	LDS  R30,_p_S1030026000
000b71 91f0 049d 	LDS  R31,_p_S1030026000+1
000b73 83ec      	STD  Y+4,R30
000b74 83fd      	STD  Y+4+1,R31
                 _0x2060003:
000b75 940e 0d63 	CALL SUBOPT_0x25
000b77 940e 0b49 	CALL _strspnf
000b79 81ac      	LDD  R26,Y+4
000b7a 81bd      	LDD  R27,Y+4+1
000b7b 0fea      	ADD  R30,R26
000b7c 1ffb      	ADC  R31,R27
000b7d 83ec      	STD  Y+4,R30
000b7e 83fd      	STD  Y+4+1,R31
000b7f 81ac      	LDD  R26,Y+4
000b80 81bd      	LDD  R27,Y+4+1
000b81 91ec      	LD   R30,X
000b82 30e0      	CPI  R30,0
000b83 f441      	BRNE _0x2060005
000b84 e0e0      	LDI  R30,LOW(0)
000b85 93e0 049c 	STS  _p_S1030026000,R30
000b87 93e0 049d 	STS  _p_S1030026000+1,R30
000b89 e0e0      	LDI  R30,LOW(0)
000b8a e0f0      	LDI  R31,HIGH(0)
000b8b c012      	RJMP _0x2120004
                 _0x2060005:
000b8c 940e 0d63 	CALL SUBOPT_0x25
000b8e 940e 0b32 	CALL _strpbrkf
000b90 018f      	MOVW R16,R30
000b91 9730      	SBIW R30,0
000b92 f029      	BREQ _0x2060006
000b93 01d8      	MOVW R26,R16
                +
000b94 5f0f     +SUBI R16 , LOW ( - 1 )
000b95 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000b96 e0e0      	LDI  R30,LOW(0)
000b97 93ec      	ST   X,R30
                 _0x2060006:
                +
000b98 9300 049c+STS _p_S1030026000 + ( 0 ) , R16
000b9a 9310 049d+STS _p_S1030026000 + ( 0 ) + 1 , R17
                 	__PUTWMRN _p_S1030026000,0,16,17
000b9c 81ec      	LDD  R30,Y+4
000b9d 81fd      	LDD  R31,Y+4+1
                 _0x2120004:
000b9e 8119      	LDD  R17,Y+1
000b9f 8108      	LDD  R16,Y+0
                 _0x2120005:
000ba0 9626      	ADIW R28,6
000ba1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _atoi:
                 ; .FSTART _atoi
000ba2 93ba      	ST   -Y,R27
000ba3 93aa      	ST   -Y,R26
000ba4 81b9         	ldd  r27,y+1
000ba5 81a8         	ld   r26,y
                 __atoi0:
000ba6 91ec         	ld   r30,x
000ba7 2f8a              mov  r24,r26
000ba8 2fae      	MOV  R26,R30
000ba9 940e 0c53 	CALL _isspace
000bab 2fa8              mov  r26,r24
000bac 23ee         	tst  r30
000bad f011         	breq __atoi1
000bae 9611         	adiw r26,1
000baf cff6         	rjmp __atoi0
                 __atoi1:
000bb0 94e8         	clt
000bb1 91ec         	ld   r30,x
000bb2 32ed         	cpi  r30,'-'
000bb3 f411         	brne __atoi2
000bb4 9468         	set
000bb5 c002         	rjmp __atoi3
                 __atoi2:
000bb6 32eb         	cpi  r30,'+'
000bb7 f409         	brne __atoi4
                 __atoi3:
000bb8 9611         	adiw r26,1
                 __atoi4:
000bb9 2766         	clr  r22
000bba 2777         	clr  r23
                 __atoi5:
000bbb 91ec         	ld   r30,x
000bbc 2f8a              mov  r24,r26
000bbd 2fae      	MOV  R26,R30
000bbe 940e 0c4a 	CALL _isdigit
000bc0 2fa8              mov  r26,r24
000bc1 23ee         	tst  r30
000bc2 f079         	breq __atoi6
000bc3 01fb         	movw r30,r22
000bc4 0f66         	lsl  r22
000bc5 1f77         	rol  r23
000bc6 0f66         	lsl  r22
000bc7 1f77         	rol  r23
000bc8 0f6e         	add  r22,r30
000bc9 1f7f         	adc  r23,r31
000bca 0f66         	lsl  r22
000bcb 1f77         	rol  r23
000bcc 91ed         	ld   r30,x+
000bcd 27ff         	clr  r31
000bce 53e0         	subi r30,'0'
000bcf 0f6e         	add  r22,r30
000bd0 1f7f         	adc  r23,r31
000bd1 cfe9         	rjmp __atoi5
                 __atoi6:
000bd2 01fb         	movw r30,r22
000bd3 f41e         	brtc __atoi7
000bd4 95e0         	com  r30
000bd5 95f0         	com  r31
000bd6 9631         	adiw r30,1
                 __atoi7:
000bd7 9622         	adiw r28,2
000bd8 9508         	ret
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _glcd_getmask:
                 ; .FSTART _glcd_getmask
000bd9 93aa      	ST   -Y,R26
000bda 81e8      	LD   R30,Y
000bdb e0f0      	LDI  R31,0
000bdc 5ce8      	SUBI R30,LOW(-__glcd_mask*2)
000bdd 4ffd      	SBCI R31,HIGH(-__glcd_mask*2)
000bde 91a4      	LPM  R26,Z
000bdf 81e9      	LDD  R30,Y+1
000be0 940e 0eb7 	CALL __LSLB12
                 _0x2120003:
000be2 9622      	ADIW R28,2
000be3 9508      	RET
                 ; .FEND
                 _glcd_mappixcolor1bit:
                 ; .FSTART _glcd_mappixcolor1bit
000be4 93aa      	ST   -Y,R26
000be5 931a      	ST   -Y,R17
000be6 81e9      	LDD  R30,Y+1
000be7 30e7      	CPI  R30,LOW(0x7)
000be8 f011      	BREQ _0x20C0007
000be9 30ea      	CPI  R30,LOW(0xA)
000bea f419      	BRNE _0x20C0008
                 _0x20C0007:
000beb 9110 0268 	LDS  R17,_glcd_state
000bed c009      	RJMP _0x20C0009
                 _0x20C0008:
000bee 30e9      	CPI  R30,LOW(0x9)
000bef f419      	BRNE _0x20C000B
                +
000bf0 9110 0269+LDS R17 , _glcd_state + ( 1 )
                 	__GETBRMN 17,_glcd_state,1
000bf2 c004      	RJMP _0x20C0009
                 _0x20C000B:
000bf3 30e8      	CPI  R30,LOW(0x8)
000bf4 f4a1      	BRNE _0x20C0005
                +
000bf5 9110 0278+LDS R17 , _glcd_state + ( 16 )
                 	__GETBRMN 17,_glcd_state,16
                 _0x20C0009:
                +
000bf7 91e0 0269+LDS R30 , _glcd_state + ( 1 )
                 	__GETB1MN _glcd_state,1
000bf9 30e0      	CPI  R30,0
000bfa f049      	BREQ _0x20C000E
000bfb 3010      	CPI  R17,0
000bfc f019      	BREQ _0x20C000F
000bfd efef      	LDI  R30,LOW(255)
000bfe 8118      	LDD  R17,Y+0
000bff c029      	RJMP _0x2120002
                 _0x20C000F:
000c00 81ea      	LDD  R30,Y+2
000c01 95e0      	COM  R30
000c02 8118      	LDD  R17,Y+0
000c03 c025      	RJMP _0x2120002
                 _0x20C000E:
000c04 3010      	CPI  R17,0
000c05 f419      	BRNE _0x20C0011
000c06 e0e0      	LDI  R30,LOW(0)
000c07 8118      	LDD  R17,Y+0
000c08 c020      	RJMP _0x2120002
                 _0x20C0011:
                 _0x20C0005:
000c09 81ea      	LDD  R30,Y+2
000c0a 8118      	LDD  R17,Y+0
000c0b c01d      	RJMP _0x2120002
                 ; .FEND
                 _glcd_readmem:
                 ; .FSTART _glcd_readmem
000c0c 93ba      	ST   -Y,R27
000c0d 93aa      	ST   -Y,R26
000c0e 81ea      	LDD  R30,Y+2
000c0f 30e1      	CPI  R30,LOW(0x1)
000c10 f421      	BRNE _0x20C0015
000c11 81e8      	LD   R30,Y
000c12 81f9      	LDD  R31,Y+1
000c13 91e4      	LPM  R30,Z
000c14 c014      	RJMP _0x2120002
                 _0x20C0015:
000c15 30e2      	CPI  R30,LOW(0x2)
000c16 f429      	BRNE _0x20C0016
000c17 81a8      	LD   R26,Y
000c18 81b9      	LDD  R27,Y+1
000c19 940e 0f0c 	CALL __EEPROMRDB
000c1b c00d      	RJMP _0x2120002
                 _0x20C0016:
000c1c 30e3      	CPI  R30,LOW(0x3)
000c1d f441      	BRNE _0x20C0018
000c1e 81a8      	LD   R26,Y
000c1f 81b9      	LDD  R27,Y+1
                +
000c20 91e0 0281+LDS R30 , _glcd_state + ( 25 )
000c22 91f0 0282+LDS R31 , _glcd_state + ( 25 ) + 1
000c24 9509     +ICALL
                 	__CALL1MN _glcd_state,25
000c25 c003      	RJMP _0x2120002
                 _0x20C0018:
000c26 81a8      	LD   R26,Y
000c27 81b9      	LDD  R27,Y+1
000c28 91ec      	LD   R30,X
                 _0x2120002:
000c29 9623      	ADIW R28,3
000c2a 9508      	RET
                 ; .FEND
                 _glcd_writemem:
                 ; .FSTART _glcd_writemem
000c2b 93aa      	ST   -Y,R26
000c2c 81eb      	LDD  R30,Y+3
000c2d 30e0      	CPI  R30,0
000c2e f429      	BRNE _0x20C001C
000c2f 81e8      	LD   R30,Y
000c30 81a9      	LDD  R26,Y+1
000c31 81ba      	LDD  R27,Y+1+1
000c32 93ec      	ST   X,R30
000c33 c014      	RJMP _0x20C001B
                 _0x20C001C:
000c34 30e2      	CPI  R30,LOW(0x2)
000c35 f431      	BRNE _0x20C001D
000c36 81e8      	LD   R30,Y
000c37 81a9      	LDD  R26,Y+1
000c38 81ba      	LDD  R27,Y+1+1
000c39 940e 0f18 	CALL __EEPROMWRB
000c3b c00c      	RJMP _0x20C001B
                 _0x20C001D:
000c3c 30e3      	CPI  R30,LOW(0x3)
000c3d f451      	BRNE _0x20C001B
000c3e 81e9      	LDD  R30,Y+1
000c3f 81fa      	LDD  R31,Y+1+1
000c40 93fa      	ST   -Y,R31
000c41 93ea      	ST   -Y,R30
000c42 81aa      	LDD  R26,Y+2
                +
000c43 91e0 0283+LDS R30 , _glcd_state + ( 27 )
000c45 91f0 0284+LDS R31 , _glcd_state + ( 27 ) + 1
000c47 9509     +ICALL
                 	__CALL1MN _glcd_state,27
                 _0x20C001B:
                 _0x2120001:
000c48 9624      	ADIW R28,4
000c49 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _isdigit:
                 ; .FSTART _isdigit
000c4a 93aa      	ST   -Y,R26
000c4b e0e1          ldi  r30,1
000c4c 91f9          ld   r31,y+
000c4d 33f0          cpi  r31,'0'
000c4e f010          brlo isdigit0
000c4f 33fa          cpi  r31,'9'+1
000c50 f008          brlo isdigit1
                 isdigit0:
000c51 27ee          clr  r30
                 isdigit1:
000c52 9508          ret
                 ; .FEND
                 _isspace:
                 ; .FSTART _isspace
000c53 93aa      	ST   -Y,R26
000c54 e0e1          ldi  r30,1
000c55 91f9          ld   r31,y+
000c56 32f0          cpi  r31,' '
000c57 f029          breq isspace1
000c58 30f9          cpi  r31,9
000c59 f010          brlo isspace0
000c5a 30fe          cpi  r31,13+1
000c5b f008          brlo isspace1
                 isspace0:
000c5c 27ee          clr  r30
                 isspace1:
000c5d 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _glcd_state:
000268           	.BYTE 0x1D
                 _count3:
000285           	.BYTE 0x2
                 _estado:
000287           	.BYTE 0x2
                 _rpm_max:
000289           	.BYTE 0x2
                 _pres_max_glob:
00028b           	.BYTE 0x2
                 _tiempo_ins_glob:
00028d           	.BYTE 0x2
                 _tiempo_espera:
00028f           	.BYTE 0x2
                 _presion_PEEP:
000291           	.BYTE 0x2
                 _presion_ins:
000293           	.BYTE 0x2
                 _presion_esp:
000295           	.BYTE 0x2
                 _rx_buffer:
000297           	.BYTE 0x8
                 _rx_wr_index:
00029f           	.BYTE 0x1
                 _rx_rd_index:
0002a0           	.BYTE 0x1
                 _rx_counter:
0002a1           	.BYTE 0x1
                 _gfx_addr_G100:
0002a2           	.BYTE 0x2
                 _gfx_buffer_G100:
0002a4           	.BYTE 0x1F8
                 _p_S1030026000:
00049c           	.BYTE 0x2
                 __seed_G104:
00049e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x0:
000c5e 91ed      	LD   R30,X+
000c5f 91fd      	LD   R31,X+
000c60 9631      	ADIW R30,1
000c61 93fe      	ST   -X,R31
000c62 93ee      	ST   -X,R30
000c63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000c64 e080      	LDI  R24,0
000c65 940e 0abc 	CALL _sprintf
000c67 9624      	ADIW R28,4
000c68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000c69 01fe      	MOVW R30,R28
000c6a 96b4      	ADIW R30,36
000c6b 93fa      	ST   -Y,R31
000c6c 93ea      	ST   -Y,R30
000c6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000c6e 93fa      	ST   -Y,R31
000c6f 93ea      	ST   -Y,R30
000c70 cff3      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000c71 2766      	CLR  R22
000c72 2777      	CLR  R23
000c73 940e 0f07 	CALL __PUTPARD1
000c75 e084      	LDI  R24,4
000c76 940e 0abc 	CALL _sprintf
000c78 9628      	ADIW R28,8
000c79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000c7a 940e 08a3 	CALL _glcd_outtext
000c7c e0e8      	LDI  R30,LOW(8)
000c7d 93ea      	ST   -Y,R30
000c7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x6:
000c7f 93fa      	ST   -Y,R31
000c80 93ea      	ST   -Y,R30
                +
000c81 eaa1     +LDI R26 , LOW ( 2 * _0x0 + ( 83 ) )
000c82 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 83 ) )
                 	__POINTW2FN _0x0,83
000c83 940e 0b5e 	CALL _strtok
000c85 019f      	MOVW R18,R30
000c86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000c87 93ba      	ST   -Y,R27
000c88 93aa      	ST   -Y,R26
000c89 e0e0      	LDI  R30,LOW(0)
000c8a 93e0 0285 	STS  _count3,R30
000c8c 93e0 0286 	STS  _count3+1,R30
000c8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x8:
000c8f 93fa      	ST   -Y,R31
000c90 93ea      	ST   -Y,R30
000c91 91e0 0287 	LDS  R30,_estado
000c93 91f0 0288 	LDS  R31,_estado+1
000c95 93fa      	ST   -Y,R31
000c96 93ea      	ST   -Y,R30
000c97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000c98 91a0 0285 	LDS  R26,_count3
000c9a 91b0 0286 	LDS  R27,_count3+1
000c9c 17ae      	CP   R26,R30
000c9d 07bf      	CPC  R27,R31
000c9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
000c9f 940e 02e8 	CALL _leer_presion
000ca1 93e0 0295 	STS  _presion_esp,R30
000ca3 93f0 0296 	STS  _presion_esp+1,R31
000ca5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
000ca6 927a      	ST   -Y,R7
000ca7 926a      	ST   -Y,R6
000ca8 91e0 0295 	LDS  R30,_presion_esp
000caa 91f0 0296 	LDS  R31,_presion_esp+1
000cac cfe2      	RJMP SUBOPT_0x8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
000cad 91e0 028d 	LDS  R30,_tiempo_ins_glob
000caf 91f0 028e 	LDS  R31,_tiempo_ins_glob+1
000cb1 93fa      	ST   -Y,R31
000cb2 93ea      	ST   -Y,R30
000cb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000cb4 91a0 028f 	LDS  R26,_tiempo_espera
000cb6 91b0 0290 	LDS  R27,_tiempo_espera+1
000cb8 940c 03ce 	JMP  _Wait
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000cba eaa2      	LDI  R26,LOW(_gfx_addr_G100)
000cbb e0b2      	LDI  R27,HIGH(_gfx_addr_G100)
000cbc cfa1      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
000cbd 0fea      	ADD  R30,R26
000cbe 1ffb      	ADC  R31,R27
000cbf 83ee      	STD  Y+6,R30
000cc0 83ff      	STD  Y+6+1,R31
000cc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x10:
000cc2 85ec      	LDD  R30,Y+12
000cc3 93ea      	ST   -Y,R30
000cc4 81ef      	LDD  R30,Y+7
000cc5 85f8      	LDD  R31,Y+7+1
000cc6 9631      	ADIW R30,1
000cc7 83ef      	STD  Y+7,R30
000cc8 87f8      	STD  Y+7+1,R31
000cc9 9731      	SBIW R30,1
000cca 93fa      	ST   -Y,R31
000ccb 93ea      	ST   -Y,R30
000ccc e0a0      	LDI  R26,LOW(0)
000ccd 940c 0c2b 	JMP  _glcd_writemem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000ccf 930a      	ST   -Y,R16
000cd0 89a8      	LDD  R26,Y+16
000cd1 940c 048e 	JMP  _pcd8544_setaddr_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x12:
000cd3 85ec      	LDD  R30,Y+12
000cd4 93ea      	ST   -Y,R30
000cd5 81ef      	LDD  R30,Y+7
000cd6 85f8      	LDD  R31,Y+7+1
000cd7 9631      	ADIW R30,1
000cd8 83ef      	STD  Y+7,R30
000cd9 87f8      	STD  Y+7+1,R31
000cda 9731      	SBIW R30,1
000cdb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13:
000cdc 2766      	CLR  R22
000cdd 2777      	CLR  R23
000cde 01df      	MOVW R26,R30
000cdf 01cb      	MOVW R24,R22
000ce0 940c 0c0c 	JMP  _glcd_readmem
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
000ce2 935a      	ST   -Y,R21
000ce3 85aa      	LDD  R26,Y+10
000ce4 940c 0be4 	JMP  _glcd_mappixcolor1bit
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
000ce6 930a      	ST   -Y,R16
000ce7 9503      	INC  R16
000ce8 89e8      	LDD  R30,Y+16
000ce9 93ea      	ST   -Y,R30
000cea 935a      	ST   -Y,R21
000ceb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16:
000cec 2f5e      	MOV  R21,R30
000ced 85ec      	LDD  R30,Y+12
000cee 93ea      	ST   -Y,R30
000cef 81af      	LDD  R26,Y+7
000cf0 85b8      	LDD  R27,Y+7+1
000cf1 2788      	CLR  R24
000cf2 2799      	CLR  R25
000cf3 940e 0c0c 	CALL _glcd_readmem
000cf5 2e1e      	MOV  R1,R30
000cf6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x17:
000cf7 930a      	ST   -Y,R16
000cf8 9503      	INC  R16
000cf9 89e8      	LDD  R30,Y+16
000cfa 93ea      	ST   -Y,R30
000cfb 85ee      	LDD  R30,Y+14
000cfc 93ea      	ST   -Y,R30
000cfd 85e9      	LDD  R30,Y+9
000cfe 85fa      	LDD  R31,Y+9+1
000cff 9631      	ADIW R30,1
000d00 87e9      	STD  Y+9,R30
000d01 87fa      	STD  Y+9+1,R31
000d02 9731      	SBIW R30,1
000d03 cfd8      	RJMP SUBOPT_0x13
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18:
000d04 93ba      	ST   -Y,R27
000d05 93aa      	ST   -Y,R26
000d06 81a8      	LD   R26,Y
000d07 81b9      	LDD  R27,Y+1
000d08 940e 0f2d 	CALL __CPW02
000d0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
000d0b 940e 0f31 	CALL __SAVELOCR6
                +
000d0d 91e0 026c+LDS R30 , _glcd_state + ( 4 )
000d0f 91f0 026d+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000d11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
000d12 01f8      	MOVW R30,R16
                +
000d13 5f0f     +SUBI R16 , LOW ( - 1 )
000d14 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000d15 9004      	LPM  R0,Z
000d16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
                +
000d17 91e0 026c+LDS R30 , _glcd_state + ( 4 )
000d19 91f0 026d+LDS R31 , _glcd_state + ( 4 ) + 1
                 	__GETW1MN _glcd_state,4
000d1b 9631      	ADIW R30,1
000d1c 91e4      	LPM  R30,Z
000d1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
000d1e 93ea      	ST   -Y,R30
000d1f e0e0      	LDI  R30,LOW(0)
000d20 93ea      	ST   -Y,R30
000d21 e0e0      	LDI  R30,LOW(0)
000d22 e0f0      	LDI  R31,HIGH(0)
000d23 93fa      	ST   -Y,R31
000d24 93ea      	ST   -Y,R30
000d25 e0a9      	LDI  R26,LOW(9)
000d26 940c 05ac 	JMP  _glcd_block
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1D:
000d28 932a      	ST   -Y,R18
000d29 89aa      	LDD  R26,Y+18
000d2a 89bb      	LDD  R27,Y+18+1
000d2b 89ec      	LDD  R30,Y+20
000d2c 89fd      	LDD  R31,Y+20+1
000d2d 9509      	ICALL
000d2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E:
000d2f 89ed      	LDD  R30,Y+21
000d30 89fe      	LDD  R31,Y+21+1
000d31 9734      	SBIW R30,4
000d32 8bed      	STD  Y+21,R30
000d33 8bfe      	STD  Y+21+1,R31
000d34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000d35 89aa      	LDD  R26,Y+18
000d36 89bb      	LDD  R27,Y+18+1
000d37 89ec      	LDD  R30,Y+20
000d38 89fd      	LDD  R31,Y+20+1
000d39 9509      	ICALL
000d3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x20:
000d3b 89ad      	LDD  R26,Y+21
000d3c 89be      	LDD  R27,Y+21+1
000d3d 9614      	ADIW R26,4
000d3e 940e 0efd 	CALL __GETW1P
000d40 83ee      	STD  Y+6,R30
000d41 83ff      	STD  Y+6+1,R31
000d42 81ae      	LDD  R26,Y+6
000d43 81bf      	LDD  R27,Y+6+1
000d44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21:
                +
000d45 87e8     +STD Y + 8 , R30
000d46 87f9     +STD Y + 8 + 1 , R31
000d47 876a     +STD Y + 8 + 2 , R22
000d48 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000d49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
000d4a 85e8     +LDD R30 , Y + 8
000d4b 85f9     +LDD R31 , Y + 8 + 1
000d4c 856a     +LDD R22 , Y + 8 + 2
000d4d 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
000d4e 85ac     +LDD R26 , Y + 12
000d4f 85bd     +LDD R27 , Y + 12 + 1
000d50 858e     +LDD R24 , Y + 12 + 2
000d51 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000d52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
000d53 01de      	MOVW R26,R28
000d54 961c      	ADIW R26,12
000d55 940e 0eab 	CALL __ADDW2R15
000d57 940e 0efd 	CALL __GETW1P
000d59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
000d5a 940e 0eab 	CALL __ADDW2R15
000d5c 940e 0efd 	CALL __GETW1P
000d5e 93fa      	ST   -Y,R31
000d5f 93ea      	ST   -Y,R30
000d60 931a      	ST   -Y,R17
000d61 930a      	ST   -Y,R16
000d62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25:
000d63 81ec      	LDD  R30,Y+4
000d64 81fd      	LDD  R31,Y+4+1
000d65 93fa      	ST   -Y,R31
000d66 93ea      	ST   -Y,R30
000d67 81ac      	LDD  R26,Y+4
000d68 81bd      	LDD  R27,Y+4+1
000d69 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000d6a 9610      	adiw r26,0
000d6b f039      	breq __delay_ms1
                 __delay_ms0:
                +
000d6c ed80     +LDI R24 , LOW ( 0x7D0 )
000d6d e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000d6e 9701     +SBIW R24 , 1
000d6f f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000d70 95a8      	wdr
000d71 9711      	sbiw r26,1
000d72 f7c9      	brne __delay_ms0
                 __delay_ms1:
000d73 9508      	ret
                 
                 __ROUND_REPACK:
000d74 2355      	TST  R21
000d75 f442      	BRPL __REPACK
000d76 3850      	CPI  R21,0x80
000d77 f411      	BRNE __ROUND_REPACK0
000d78 ffe0      	SBRS R30,0
000d79 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000d7a 9631      	ADIW R30,1
000d7b 1f69      	ADC  R22,R25
000d7c 1f79      	ADC  R23,R25
000d7d f06b      	BRVS __REPACK1
                 
                 __REPACK:
000d7e e850      	LDI  R21,0x80
000d7f 2757      	EOR  R21,R23
000d80 f411      	BRNE __REPACK0
000d81 935f      	PUSH R21
000d82 c0c8      	RJMP __ZERORES
                 __REPACK0:
000d83 3f5f      	CPI  R21,0xFF
000d84 f031      	BREQ __REPACK1
000d85 0f66      	LSL  R22
000d86 0c00      	LSL  R0
000d87 9557      	ROR  R21
000d88 9567      	ROR  R22
000d89 2f75      	MOV  R23,R21
000d8a 9508      	RET
                 __REPACK1:
000d8b 935f      	PUSH R21
000d8c 2000      	TST  R0
000d8d f00a      	BRMI __REPACK2
000d8e c0c8      	RJMP __MAXRES
                 __REPACK2:
000d8f c0c1      	RJMP __MINRES
                 
                 __UNPACK:
000d90 e850      	LDI  R21,0x80
000d91 2e19      	MOV  R1,R25
000d92 2215      	AND  R1,R21
000d93 0f88      	LSL  R24
000d94 1f99      	ROL  R25
000d95 2795      	EOR  R25,R21
000d96 0f55      	LSL  R21
000d97 9587      	ROR  R24
                 
                 __UNPACK1:
000d98 e850      	LDI  R21,0x80
000d99 2e07      	MOV  R0,R23
000d9a 2205      	AND  R0,R21
000d9b 0f66      	LSL  R22
000d9c 1f77      	ROL  R23
000d9d 2775      	EOR  R23,R21
000d9e 0f55      	LSL  R21
000d9f 9567      	ROR  R22
000da0 9508      	RET
                 
                 __CFD1U:
000da1 9468      	SET
000da2 c001      	RJMP __CFD1U0
                 __CFD1:
000da3 94e8      	CLT
                 __CFD1U0:
000da4 935f      	PUSH R21
000da5 dff2      	RCALL __UNPACK1
000da6 3870      	CPI  R23,0x80
000da7 f018      	BRLO __CFD10
000da8 3f7f      	CPI  R23,0xFF
000da9 f408      	BRCC __CFD10
000daa c0a0      	RJMP __ZERORES
                 __CFD10:
000dab e156      	LDI  R21,22
000dac 1b57      	SUB  R21,R23
000dad f4aa      	BRPL __CFD11
000dae 9551      	NEG  R21
000daf 3058      	CPI  R21,8
000db0 f40e      	BRTC __CFD19
000db1 3059      	CPI  R21,9
                 __CFD19:
000db2 f030      	BRLO __CFD17
000db3 efef      	SER  R30
000db4 efff      	SER  R31
000db5 ef6f      	SER  R22
000db6 e77f      	LDI  R23,0x7F
000db7 f977      	BLD  R23,7
000db8 c01a      	RJMP __CFD15
                 __CFD17:
000db9 2777      	CLR  R23
000dba 2355      	TST  R21
000dbb f0b9      	BREQ __CFD15
                 __CFD18:
000dbc 0fee      	LSL  R30
000dbd 1fff      	ROL  R31
000dbe 1f66      	ROL  R22
000dbf 1f77      	ROL  R23
000dc0 955a      	DEC  R21
000dc1 f7d1      	BRNE __CFD18
000dc2 c010      	RJMP __CFD15
                 __CFD11:
000dc3 2777      	CLR  R23
                 __CFD12:
000dc4 3058      	CPI  R21,8
000dc5 f028      	BRLO __CFD13
000dc6 2fef      	MOV  R30,R31
000dc7 2ff6      	MOV  R31,R22
000dc8 2f67      	MOV  R22,R23
000dc9 5058      	SUBI R21,8
000dca cff9      	RJMP __CFD12
                 __CFD13:
000dcb 2355      	TST  R21
000dcc f031      	BREQ __CFD15
                 __CFD14:
000dcd 9576      	LSR  R23
000dce 9567      	ROR  R22
000dcf 95f7      	ROR  R31
000dd0 95e7      	ROR  R30
000dd1 955a      	DEC  R21
000dd2 f7d1      	BRNE __CFD14
                 __CFD15:
000dd3 2000      	TST  R0
000dd4 f40a      	BRPL __CFD16
000dd5 d0d9      	RCALL __ANEGD1
                 __CFD16:
000dd6 915f      	POP  R21
000dd7 9508      	RET
                 
                 __CDF1U:
000dd8 9468      	SET
000dd9 c001      	RJMP __CDF1U0
                 __CDF1:
000dda 94e8      	CLT
                 __CDF1U0:
000ddb 9730      	SBIW R30,0
000ddc 4060      	SBCI R22,0
000ddd 4070      	SBCI R23,0
000dde f0b1      	BREQ __CDF10
000ddf 2400      	CLR  R0
000de0 f026      	BRTS __CDF11
000de1 2377      	TST  R23
000de2 f412      	BRPL __CDF11
000de3 9400      	COM  R0
000de4 d0ca      	RCALL __ANEGD1
                 __CDF11:
000de5 2e17      	MOV  R1,R23
000de6 e17e      	LDI  R23,30
000de7 2011      	TST  R1
                 __CDF12:
000de8 f032      	BRMI __CDF13
000de9 957a      	DEC  R23
000dea 0fee      	LSL  R30
000deb 1fff      	ROL  R31
000dec 1f66      	ROL  R22
000ded 1c11      	ROL  R1
000dee cff9      	RJMP __CDF12
                 __CDF13:
000def 2fef      	MOV  R30,R31
000df0 2ff6      	MOV  R31,R22
000df1 2d61      	MOV  R22,R1
000df2 935f      	PUSH R21
000df3 df8a      	RCALL __REPACK
000df4 915f      	POP  R21
                 __CDF10:
000df5 9508      	RET
                 
                 __SWAPACC:
000df6 934f      	PUSH R20
000df7 01af      	MOVW R20,R30
000df8 01fd      	MOVW R30,R26
000df9 01da      	MOVW R26,R20
000dfa 01ab      	MOVW R20,R22
000dfb 01bc      	MOVW R22,R24
000dfc 01ca      	MOVW R24,R20
000dfd 2d40      	MOV  R20,R0
000dfe 2c01      	MOV  R0,R1
000dff 2e14      	MOV  R1,R20
000e00 914f      	POP  R20
000e01 9508      	RET
                 
                 __UADD12:
000e02 0fea      	ADD  R30,R26
000e03 1ffb      	ADC  R31,R27
000e04 1f68      	ADC  R22,R24
000e05 9508      	RET
                 
                 __NEGMAN1:
000e06 95e0      	COM  R30
000e07 95f0      	COM  R31
000e08 9560      	COM  R22
000e09 5fef      	SUBI R30,-1
000e0a 4fff      	SBCI R31,-1
000e0b 4f6f      	SBCI R22,-1
000e0c 9508      	RET
                 
                 __ADDF12:
000e0d 935f      	PUSH R21
000e0e df81      	RCALL __UNPACK
000e0f 3890      	CPI  R25,0x80
000e10 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000e11 3870      	CPI  R23,0x80
000e12 f121      	BREQ __ADDF128
                 __ADDF121:
000e13 2f57      	MOV  R21,R23
000e14 1b59      	SUB  R21,R25
000e15 f12b      	BRVS __ADDF1211
000e16 f412      	BRPL __ADDF122
000e17 dfde      	RCALL __SWAPACC
000e18 cffa      	RJMP __ADDF121
                 __ADDF122:
000e19 3158      	CPI  R21,24
000e1a f018      	BRLO __ADDF123
000e1b 27aa      	CLR  R26
000e1c 27bb      	CLR  R27
000e1d 2788      	CLR  R24
                 __ADDF123:
000e1e 3058      	CPI  R21,8
000e1f f028      	BRLO __ADDF124
000e20 2fab      	MOV  R26,R27
000e21 2fb8      	MOV  R27,R24
000e22 2788      	CLR  R24
000e23 5058      	SUBI R21,8
000e24 cff9      	RJMP __ADDF123
                 __ADDF124:
000e25 2355      	TST  R21
000e26 f029      	BREQ __ADDF126
                 __ADDF125:
000e27 9586      	LSR  R24
000e28 95b7      	ROR  R27
000e29 95a7      	ROR  R26
000e2a 955a      	DEC  R21
000e2b f7d9      	BRNE __ADDF125
                 __ADDF126:
000e2c 2d50      	MOV  R21,R0
000e2d 2551      	EOR  R21,R1
000e2e f072      	BRMI __ADDF127
000e2f dfd2      	RCALL __UADD12
000e30 f438      	BRCC __ADDF129
000e31 9567      	ROR  R22
000e32 95f7      	ROR  R31
000e33 95e7      	ROR  R30
000e34 9573      	INC  R23
000e35 f413      	BRVC __ADDF129
000e36 c020      	RJMP __MAXRES
                 __ADDF128:
000e37 dfbe      	RCALL __SWAPACC
                 __ADDF129:
000e38 df45      	RCALL __REPACK
000e39 915f      	POP  R21
000e3a 9508      	RET
                 __ADDF1211:
000e3b f7d8      	BRCC __ADDF128
000e3c cffb      	RJMP __ADDF129
                 __ADDF127:
000e3d 1bea      	SUB  R30,R26
000e3e 0bfb      	SBC  R31,R27
000e3f 0b68      	SBC  R22,R24
000e40 f051      	BREQ __ZERORES
000e41 f410      	BRCC __ADDF1210
000e42 9400      	COM  R0
000e43 dfc2      	RCALL __NEGMAN1
                 __ADDF1210:
000e44 2366      	TST  R22
000e45 f392      	BRMI __ADDF129
000e46 0fee      	LSL  R30
000e47 1fff      	ROL  R31
000e48 1f66      	ROL  R22
000e49 957a      	DEC  R23
000e4a f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000e4b 27ee      	CLR  R30
000e4c 27ff      	CLR  R31
000e4d 2766      	CLR  R22
000e4e 2777      	CLR  R23
000e4f 915f      	POP  R21
000e50 9508      	RET
                 
                 __MINRES:
000e51 efef      	SER  R30
000e52 efff      	SER  R31
000e53 e76f      	LDI  R22,0x7F
000e54 ef7f      	SER  R23
000e55 915f      	POP  R21
000e56 9508      	RET
                 
                 __MAXRES:
000e57 efef      	SER  R30
000e58 efff      	SER  R31
000e59 e76f      	LDI  R22,0x7F
000e5a e77f      	LDI  R23,0x7F
000e5b 915f      	POP  R21
000e5c 9508      	RET
                 
                 __MULF12:
000e5d 935f      	PUSH R21
000e5e df31      	RCALL __UNPACK
000e5f 3870      	CPI  R23,0x80
000e60 f351      	BREQ __ZERORES
000e61 3890      	CPI  R25,0x80
000e62 f341      	BREQ __ZERORES
000e63 2401      	EOR  R0,R1
000e64 9408      	SEC
000e65 1f79      	ADC  R23,R25
000e66 f423      	BRVC __MULF124
000e67 f31c      	BRLT __ZERORES
                 __MULF125:
000e68 2000      	TST  R0
000e69 f33a      	BRMI __MINRES
000e6a cfec      	RJMP __MAXRES
                 __MULF124:
000e6b 920f      	PUSH R0
000e6c 931f      	PUSH R17
000e6d 932f      	PUSH R18
000e6e 933f      	PUSH R19
000e6f 934f      	PUSH R20
000e70 2711      	CLR  R17
000e71 2722      	CLR  R18
000e72 2799      	CLR  R25
000e73 9f68      	MUL  R22,R24
000e74 01a0      	MOVW R20,R0
000e75 9f8f      	MUL  R24,R31
000e76 2d30      	MOV  R19,R0
000e77 0d41      	ADD  R20,R1
000e78 1f59      	ADC  R21,R25
000e79 9f6b      	MUL  R22,R27
000e7a 0d30      	ADD  R19,R0
000e7b 1d41      	ADC  R20,R1
000e7c 1f59      	ADC  R21,R25
000e7d 9f8e      	MUL  R24,R30
000e7e d027      	RCALL __MULF126
000e7f 9fbf      	MUL  R27,R31
000e80 d025      	RCALL __MULF126
000e81 9f6a      	MUL  R22,R26
000e82 d023      	RCALL __MULF126
000e83 9fbe      	MUL  R27,R30
000e84 d01d      	RCALL __MULF127
000e85 9faf      	MUL  R26,R31
000e86 d01b      	RCALL __MULF127
000e87 9fae      	MUL  R26,R30
000e88 0d11      	ADD  R17,R1
000e89 1f29      	ADC  R18,R25
000e8a 1f39      	ADC  R19,R25
000e8b 1f49      	ADC  R20,R25
000e8c 1f59      	ADC  R21,R25
000e8d 2fe3      	MOV  R30,R19
000e8e 2ff4      	MOV  R31,R20
000e8f 2f65      	MOV  R22,R21
000e90 2f52      	MOV  R21,R18
000e91 914f      	POP  R20
000e92 913f      	POP  R19
000e93 912f      	POP  R18
000e94 911f      	POP  R17
000e95 900f      	POP  R0
000e96 2366      	TST  R22
000e97 f02a      	BRMI __MULF122
000e98 0f55      	LSL  R21
000e99 1fee      	ROL  R30
000e9a 1fff      	ROL  R31
000e9b 1f66      	ROL  R22
000e9c c002      	RJMP __MULF123
                 __MULF122:
000e9d 9573      	INC  R23
000e9e f24b      	BRVS __MULF125
                 __MULF123:
000e9f ded4      	RCALL __ROUND_REPACK
000ea0 915f      	POP  R21
000ea1 9508      	RET
                 
                 __MULF127:
000ea2 0d10      	ADD  R17,R0
000ea3 1d21      	ADC  R18,R1
000ea4 1f39      	ADC  R19,R25
000ea5 c002      	RJMP __MULF128
                 __MULF126:
000ea6 0d20      	ADD  R18,R0
000ea7 1d31      	ADC  R19,R1
                 __MULF128:
000ea8 1f49      	ADC  R20,R25
000ea9 1f59      	ADC  R21,R25
000eaa 9508      	RET
                 
                 __ADDW2R15:
000eab 2400      	CLR  R0
000eac 0daf      	ADD  R26,R15
000ead 1db0      	ADC  R27,R0
000eae 9508      	RET
                 
                 __ANEGD1:
000eaf 95f0      	COM  R31
000eb0 9560      	COM  R22
000eb1 9570      	COM  R23
000eb2 95e1      	NEG  R30
000eb3 4fff      	SBCI R31,-1
000eb4 4f6f      	SBCI R22,-1
000eb5 4f7f      	SBCI R23,-1
000eb6 9508      	RET
                 
                 __LSLB12:
000eb7 23ee      	TST  R30
000eb8 2e0e      	MOV  R0,R30
000eb9 2fea      	MOV  R30,R26
000eba f019      	BREQ __LSLB12R
                 __LSLB12L:
000ebb 0fee      	LSL  R30
000ebc 940a      	DEC  R0
000ebd f7e9      	BRNE __LSLB12L
                 __LSLB12R:
000ebe 9508      	RET
                 
                 __LSRB12:
000ebf 23ee      	TST  R30
000ec0 2e0e      	MOV  R0,R30
000ec1 2fea      	MOV  R30,R26
000ec2 f019      	BREQ __LSRB12R
                 __LSRB12L:
000ec3 95e6      	LSR  R30
000ec4 940a      	DEC  R0
000ec5 f7e9      	BRNE __LSRB12L
                 __LSRB12R:
000ec6 9508      	RET
                 
                 __CWD1:
000ec7 2f6f      	MOV  R22,R31
000ec8 0f66      	ADD  R22,R22
000ec9 0b66      	SBC  R22,R22
000eca 2f76      	MOV  R23,R22
000ecb 9508      	RET
                 
                 __MULW12U:
000ecc 9ffa      	MUL  R31,R26
000ecd 2df0      	MOV  R31,R0
000ece 9feb      	MUL  R30,R27
000ecf 0df0      	ADD  R31,R0
000ed0 9fea      	MUL  R30,R26
000ed1 2de0      	MOV  R30,R0
000ed2 0df1      	ADD  R31,R1
000ed3 9508      	RET
                 
                 __DIVD21U:
000ed4 933f      	PUSH R19
000ed5 934f      	PUSH R20
000ed6 935f      	PUSH R21
000ed7 2400      	CLR  R0
000ed8 2411      	CLR  R1
000ed9 2744      	CLR  R20
000eda 2755      	CLR  R21
000edb e230      	LDI  R19,32
                 __DIVD21U1:
000edc 0faa      	LSL  R26
000edd 1fbb      	ROL  R27
000ede 1f88      	ROL  R24
000edf 1f99      	ROL  R25
000ee0 1c00      	ROL  R0
000ee1 1c11      	ROL  R1
000ee2 1f44      	ROL  R20
000ee3 1f55      	ROL  R21
000ee4 1a0e      	SUB  R0,R30
000ee5 0a1f      	SBC  R1,R31
000ee6 0b46      	SBC  R20,R22
000ee7 0b57      	SBC  R21,R23
000ee8 f428      	BRCC __DIVD21U2
000ee9 0e0e      	ADD  R0,R30
000eea 1e1f      	ADC  R1,R31
000eeb 1f46      	ADC  R20,R22
000eec 1f57      	ADC  R21,R23
000eed c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000eee 60a1      	SBR  R26,1
                 __DIVD21U3:
000eef 953a      	DEC  R19
000ef0 f759      	BRNE __DIVD21U1
000ef1 01fd      	MOVW R30,R26
000ef2 01bc      	MOVW R22,R24
000ef3 01d0      	MOVW R26,R0
000ef4 01ca      	MOVW R24,R20
000ef5 915f      	POP  R21
000ef6 914f      	POP  R20
000ef7 913f      	POP  R19
000ef8 9508      	RET
                 
                 __MODD21U:
000ef9 dfda      	RCALL __DIVD21U
000efa 01fd      	MOVW R30,R26
000efb 01bc      	MOVW R22,R24
000efc 9508      	RET
                 
                 __GETW1P:
000efd 91ed      	LD   R30,X+
000efe 91fc      	LD   R31,X
000eff 9711      	SBIW R26,1
000f00 9508      	RET
                 
                 __GETD1P:
000f01 91ed      	LD   R30,X+
000f02 91fd      	LD   R31,X+
000f03 916d      	LD   R22,X+
000f04 917c      	LD   R23,X
000f05 9713      	SBIW R26,3
000f06 9508      	RET
                 
                 __PUTPARD1:
000f07 937a      	ST   -Y,R23
000f08 936a      	ST   -Y,R22
000f09 93fa      	ST   -Y,R31
000f0a 93ea      	ST   -Y,R30
000f0b 9508      	RET
                 
                 __EEPROMRDB:
000f0c 99e1      	SBIC EECR,EEWE
000f0d cffe      	RJMP __EEPROMRDB
000f0e 93ff      	PUSH R31
000f0f b7ff      	IN   R31,SREG
000f10 94f8      	CLI
000f11 bbae      	OUT  EEARL,R26
000f12 bbbf      	OUT  EEARH,R27
000f13 9ae0      	SBI  EECR,EERE
000f14 b3ed      	IN   R30,EEDR
000f15 bfff      	OUT  SREG,R31
000f16 91ff      	POP  R31
000f17 9508      	RET
                 
                 __EEPROMWRB:
000f18 9be1      	SBIS EECR,EEWE
000f19 c002      	RJMP __EEPROMWRB1
000f1a 95a8      	WDR
000f1b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
000f1c b79f      	IN   R25,SREG
000f1d 94f8      	CLI
000f1e bbae      	OUT  EEARL,R26
000f1f bbbf      	OUT  EEARH,R27
000f20 9ae0      	SBI  EECR,EERE
000f21 b38d      	IN   R24,EEDR
000f22 17e8      	CP   R30,R24
000f23 f019      	BREQ __EEPROMWRB0
000f24 bbed      	OUT  EEDR,R30
000f25 9ae2      	SBI  EECR,EEMWE
000f26 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
000f27 bf9f      	OUT  SREG,R25
000f28 9508      	RET
                 
                 __CPD10:
000f29 9730      	SBIW R30,0
000f2a 4060      	SBCI R22,0
000f2b 4070      	SBCI R23,0
000f2c 9508      	RET
                 
                 __CPW02:
000f2d 2400      	CLR  R0
000f2e 160a      	CP   R0,R26
000f2f 060b      	CPC  R0,R27
000f30 9508      	RET
                 
                 __SAVELOCR6:
000f31 935a      	ST   -Y,R21
                 __SAVELOCR5:
000f32 934a      	ST   -Y,R20
                 __SAVELOCR4:
000f33 933a      	ST   -Y,R19
                 __SAVELOCR3:
000f34 932a      	ST   -Y,R18
                 __SAVELOCR2:
000f35 931a      	ST   -Y,R17
000f36 930a      	ST   -Y,R16
000f37 9508      	RET
                 
                 __LOADLOCR6:
000f38 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000f39 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000f3a 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000f3b 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000f3c 8119      	LDD  R17,Y+1
000f3d 8108      	LD   R16,Y
000f3e 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  64 r1 :  26 r2 :   1 r3 :   0 r4 :   3 r5 :   0 r6 :   4 r7 :   2 
r8 :   4 r9 :   1 r10:   4 r11:   2 r12:   4 r13:   2 r14:   0 r15:   7 
r16:  95 r17: 118 r18:  69 r19:  52 r20:  48 r21: 112 r22:  86 r23:  63 
r24:  53 r25:  34 r26: 403 r27: 155 r28:  64 r29:   1 r30: 923 r31: 274 
x  :  37 y  : 671 z  :  38 
Registers used: 32 out of 35 (91.4%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  37 add   :  32 
adiw  :  78 and   :  10 andi  :  16 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   5 brcs  :   0 break :   0 breq  :  63 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  22 
brlt  :   5 brmi  :   7 brne  : 102 brpl  :   6 brsh  :  20 brtc  :   2 
brts  :   1 brvc  :   3 brvs  :   3 bset  :   0 bst   :   0 call  : 213 
cbi   :  12 cbr   :   0 clc   :   0 clh   :   0 cli   :   4 cln   :   0 
clr   :  68 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :  17 
cp    :  28 cpc   :  17 cpi   : 124 cpse  :   0 dec   :  10 des   :   0 
eor   :   6 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   4 ijmp  :   0 
in    :  12 inc   :   4 jmp   :  44 ld    :  80 ldd   : 325 ldi   : 322 
lds   :  66 lpm   :  31 lsl   :  17 lsr   :  17 mov   : 125 movw  :  86 
mul   :  14 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   6 
ori   :  15 out   :  62 pop   :  31 push  :  30 rcall :  76 ret   :  88 
reti  :   3 rjmp  : 182 rol   :  24 ror   :  12 sbc   :   6 sbci  :  30 
sbi   :  20 sbic  :   1 sbis  :   3 sbiw  :  50 sbr   :   1 sbrc  :   2 
sbrs  :  14 sec   :   1 seh   :   0 sei   :   2 sen   :   0 ser   :   8 
ses   :   0 set   :   4 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 236 std   :  86 sts   :  53 sub   :  10 subi  :  64 swap  :   0 
tst   :  23 wdr   :   2 
Instructions used: 76 out of 116 (65.5%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001e7e   7152    654   7806   32768  23.8%
[.dseg] 0x000060 0x0004a2      0    578    578    2048  28.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 14 warnings
